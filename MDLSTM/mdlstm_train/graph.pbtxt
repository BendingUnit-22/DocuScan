node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "global_step/read"
  input: "mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast"
  op: "Cast"
  input: "mul"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4000000.0
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079071
      }
    }
  }
}
node {
  name: "ExponentialDecay/truediv"
  op: "RealDiv"
  input: "ExponentialDecay/Cast"
  input: "ExponentialDecay/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Floor"
  op: "Floor"
  input: "ExponentialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Pow"
  op: "Pow"
  input: "ExponentialDecay/Cast_2/x"
  input: "ExponentialDecay/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay"
  op: "Mul"
  input: "ExponentialDecay/learning_rate"
  input: "ExponentialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "learning_rate/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "ScalarSummary"
  input: "learning_rate/tags"
  input: "ExponentialDecay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/input_producer/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train_input/input_producer/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/input_producer/Greater"
  op: "Greater"
  input: "train_input/input_producer/Size"
  input: "train_input/input_producer/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input/input_producer/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input/input_producer/Assert/Assert"
  op: "Assert"
  input: "train_input/input_producer/Greater"
  input: "train_input/input_producer/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "train_input/input_producer/Identity"
  op: "Identity"
  input: "train_input/input_producer/Const"
  input: "^train_input/input_producer/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "train_input/input_producer/Identity"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/epochs"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/epochs/Assign"
  op: "Assign"
  input: "train_input/input_producer/limit_epochs/epochs"
  input: "train_input/input_producer/limit_epochs/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/epochs/read"
  op: "Identity"
  input: "train_input/input_producer/limit_epochs/epochs"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/CountUpTo"
  op: "CountUpTo"
  input: "train_input/input_producer/limit_epochs/epochs"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "limit"
    value {
      i: 50
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs"
  op: "Identity"
  input: "train_input/input_producer/RandomShuffle"
  input: "^train_input/input_producer/limit_epochs/CountUpTo"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input/input_producer"
  input: "train_input/input_producer/limit_epochs"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "train_input/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "train_input/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/ToFloat"
  op: "Cast"
  input: "train_input/input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "train_input/input_producer/mul"
  op: "Mul"
  input: "train_input/input_producer/ToFloat"
  input: "train_input/input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input/input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "train_input/input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "train_input/input_producer/fraction_of_32_full/tags"
  input: "train_input/input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadUpToV2/num_records"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "train_input/ReaderReadUpToV2"
  op: "ReaderReadUpToV2"
  input: "train_input/TFRecordReaderV2"
  input: "train_input/input_producer"
  input: "train_input/ReaderReadUpToV2/num_records"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseExample/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseExample/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseExample/ParseExample/names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseExample/ParseExample/sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "target"
      }
    }
  }
}
node {
  name: "train_input/ParseExample/ParseExample/dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "imageInput"
      }
    }
  }
}
node {
  name: "train_input/ParseExample/ParseExample/dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "seq_len"
      }
    }
  }
}
node {
  name: "train_input/ParseExample/ParseExample"
  op: "ParseExample"
  input: "train_input/ReaderReadUpToV2:1"
  input: "train_input/ParseExample/ParseExample/names"
  input: "train_input/ParseExample/ParseExample/sparse_keys_0"
  input: "train_input/ParseExample/ParseExample/dense_keys_0"
  input: "train_input/ParseExample/ParseExample/dense_keys_1"
  input: "train_input/ParseExample/Const"
  input: "train_input/ParseExample/Const_1"
  attr {
    key: "Ndense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nsparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_1"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadUpToV2_1/num_records"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "train_input/ReaderReadUpToV2_1"
  op: "ReaderReadUpToV2"
  input: "train_input/TFRecordReaderV2_1"
  input: "train_input/input_producer"
  input: "train_input/ReaderReadUpToV2_1/num_records"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseExample_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseExample_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseExample_1/ParseExample/names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseExample_1/ParseExample/sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "target"
      }
    }
  }
}
node {
  name: "train_input/ParseExample_1/ParseExample/dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "imageInput"
      }
    }
  }
}
node {
  name: "train_input/ParseExample_1/ParseExample/dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "seq_len"
      }
    }
  }
}
node {
  name: "train_input/ParseExample_1/ParseExample"
  op: "ParseExample"
  input: "train_input/ReaderReadUpToV2_1:1"
  input: "train_input/ParseExample_1/ParseExample/names"
  input: "train_input/ParseExample_1/ParseExample/sparse_keys_0"
  input: "train_input/ParseExample_1/ParseExample/dense_keys_0"
  input: "train_input/ParseExample_1/ParseExample/dense_keys_1"
  input: "train_input/ParseExample_1/Const"
  input: "train_input/ParseExample_1/Const_1"
  attr {
    key: "Ndense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nsparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/AddManySparseToTensorsMap"
  op: "AddManySparseToTensorsMap"
  input: "train_input/ParseExample/ParseExample"
  input: "train_input/ParseExample/ParseExample:1"
  input: "train_input/ParseExample/ParseExample:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/ExpandDims"
  op: "ExpandDims"
  input: "train_input/shuffle_batch_join/AddManySparseToTensorsMap"
  input: "train_input/shuffle_batch_join/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/AddManySparseToTensorsMap_1"
  op: "AddManySparseToTensorsMap"
  input: "train_input/ParseExample_1/ParseExample"
  input: "train_input/ParseExample_1/ParseExample:1"
  input: "train_input/ParseExample_1/ParseExample:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "train_input/shuffle_batch_join/AddManySparseToTensorsMap"
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/ExpandDims_1"
  op: "ExpandDims"
  input: "train_input/shuffle_batch_join/AddManySparseToTensorsMap_1"
  input: "train_input/shuffle_batch_join/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 10
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 2
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ParseExample/ParseExample:3"
  input: "train_input/ParseExample/ParseExample:4"
  input: "train_input/shuffle_batch_join/ExpandDims"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_1"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ParseExample_1/ParseExample:3"
  input: "train_input/ParseExample_1/ParseExample:4"
  input: "train_input/shuffle_batch_join/ExpandDims_1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/sub"
  op: "Sub"
  input: "train_input/shuffle_batch_join/random_shuffle_queue_Size"
  input: "train_input/shuffle_batch_join/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Maximum"
  op: "Maximum"
  input: "train_input/shuffle_batch_join/Maximum/x"
  input: "train_input/shuffle_batch_join/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/ToFloat"
  op: "Cast"
  input: "train_input/shuffle_batch_join/Maximum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/mul"
  op: "Mul"
  input: "train_input/shuffle_batch_join/ToFloat"
  input: "train_input/shuffle_batch_join/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/fraction_over_2_of_8_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input/shuffle_batch_join/fraction_over_2_of_8_full"
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/fraction_over_2_of_8_full"
  op: "ScalarSummary"
  input: "train_input/shuffle_batch_join/fraction_over_2_of_8_full/tags"
  input: "train_input/shuffle_batch_join/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join"
  op: "QueueDequeueUpToV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/shuffle_batch_join/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Squeeze"
  op: "Squeeze"
  input: "train_input/shuffle_batch_join:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/TakeManySparseFromTensorsMap"
  op: "TakeManySparseFromTensorsMap"
  input: "train_input/shuffle_batch_join/Squeeze"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "train_input/shuffle_batch_join/AddManySparseToTensorsMap"
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/control_dependency"
  op: "Identity"
  input: "train_input/shuffle_batch_join"
  input: "^train_input/shuffle_batch_join/TakeManySparseFromTensorsMap"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/shuffle_batch_join"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/control_dependency_1"
  op: "Identity"
  input: "train_input/shuffle_batch_join:1"
  input: "^train_input/shuffle_batch_join/TakeManySparseFromTensorsMap"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/shuffle_batch_join"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/control_dependency_2"
  op: "Identity"
  input: "train_input/shuffle_batch_join/TakeManySparseFromTensorsMap"
  input: "^train_input/shuffle_batch_join"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/control_dependency_3"
  op: "Identity"
  input: "train_input/shuffle_batch_join/TakeManySparseFromTensorsMap:1"
  input: "^train_input/shuffle_batch_join"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/control_dependency_4"
  op: "Identity"
  input: "train_input/shuffle_batch_join/TakeManySparseFromTensorsMap:2"
  input: "^train_input/shuffle_batch_join"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "test_input/input_producer/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "test_input/input_producer/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "test_input/input_producer/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_input/input_producer/Greater"
  op: "Greater"
  input: "test_input/input_producer/Size"
  input: "test_input/input_producer/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "test_input/input_producer/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "test_input/input_producer/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "test_input/input_producer/Assert/Assert"
  op: "Assert"
  input: "test_input/input_producer/Greater"
  input: "test_input/input_producer/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "test_input/input_producer/Identity"
  op: "Identity"
  input: "test_input/input_producer/Const"
  input: "^test_input/input_producer/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "test_input/input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "test_input/input_producer/Identity"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "test_input/input_producer"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "test_input/input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "test_input/input_producer"
  input: "test_input/input_producer/RandomShuffle"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "test_input/input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "test_input/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "test_input/input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "test_input/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "test_input/input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "test_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "test_input/input_producer/ToFloat"
  op: "Cast"
  input: "test_input/input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "test_input/input_producer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "test_input/input_producer/mul"
  op: "Mul"
  input: "test_input/input_producer/ToFloat"
  input: "test_input/input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "test_input/input_producer/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "test_input/input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "test_input/input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "test_input/input_producer/fraction_of_32_full/tags"
  input: "test_input/input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "test_input/TFRecordReaderV2"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "test_input/ReaderReadUpToV2/num_records"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "test_input/ReaderReadUpToV2"
  op: "ReaderReadUpToV2"
  input: "test_input/TFRecordReaderV2"
  input: "test_input/input_producer"
  input: "test_input/ReaderReadUpToV2/num_records"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "test_input/ParseExample/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "test_input/ParseExample/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "test_input/ParseExample/ParseExample/names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "test_input/ParseExample/ParseExample/sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "target"
      }
    }
  }
}
node {
  name: "test_input/ParseExample/ParseExample/dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "imageInput"
      }
    }
  }
}
node {
  name: "test_input/ParseExample/ParseExample/dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "seq_len"
      }
    }
  }
}
node {
  name: "test_input/ParseExample/ParseExample"
  op: "ParseExample"
  input: "test_input/ReaderReadUpToV2:1"
  input: "test_input/ParseExample/ParseExample/names"
  input: "test_input/ParseExample/ParseExample/sparse_keys_0"
  input: "test_input/ParseExample/ParseExample/dense_keys_0"
  input: "test_input/ParseExample/ParseExample/dense_keys_1"
  input: "test_input/ParseExample/Const"
  input: "test_input/ParseExample/Const_1"
  attr {
    key: "Ndense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nsparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "test_input/TFRecordReaderV2_1"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "test_input/ReaderReadUpToV2_1/num_records"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "test_input/ReaderReadUpToV2_1"
  op: "ReaderReadUpToV2"
  input: "test_input/TFRecordReaderV2_1"
  input: "test_input/input_producer"
  input: "test_input/ReaderReadUpToV2_1/num_records"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "test_input/ParseExample_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "test_input/ParseExample_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "test_input/ParseExample_1/ParseExample/names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "test_input/ParseExample_1/ParseExample/sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "target"
      }
    }
  }
}
node {
  name: "test_input/ParseExample_1/ParseExample/dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "imageInput"
      }
    }
  }
}
node {
  name: "test_input/ParseExample_1/ParseExample/dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "seq_len"
      }
    }
  }
}
node {
  name: "test_input/ParseExample_1/ParseExample"
  op: "ParseExample"
  input: "test_input/ReaderReadUpToV2_1:1"
  input: "test_input/ParseExample_1/ParseExample/names"
  input: "test_input/ParseExample_1/ParseExample/sparse_keys_0"
  input: "test_input/ParseExample_1/ParseExample/dense_keys_0"
  input: "test_input/ParseExample_1/ParseExample/dense_keys_1"
  input: "test_input/ParseExample_1/Const"
  input: "test_input/ParseExample_1/Const_1"
  attr {
    key: "Ndense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nsparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/AddManySparseToTensorsMap"
  op: "AddManySparseToTensorsMap"
  input: "test_input/ParseExample/ParseExample"
  input: "test_input/ParseExample/ParseExample:1"
  input: "test_input/ParseExample/ParseExample:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/ExpandDims"
  op: "ExpandDims"
  input: "test_input/shuffle_batch_join/AddManySparseToTensorsMap"
  input: "test_input/shuffle_batch_join/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/AddManySparseToTensorsMap_1"
  op: "AddManySparseToTensorsMap"
  input: "test_input/ParseExample_1/ParseExample"
  input: "test_input/ParseExample_1/ParseExample:1"
  input: "test_input/ParseExample_1/ParseExample:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "test_input/shuffle_batch_join/AddManySparseToTensorsMap"
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/ExpandDims_1"
  op: "ExpandDims"
  input: "test_input/shuffle_batch_join/AddManySparseToTensorsMap_1"
  input: "test_input/shuffle_batch_join/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 10
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 2
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "test_input/shuffle_batch_join/random_shuffle_queue"
  input: "test_input/ParseExample/ParseExample:3"
  input: "test_input/ParseExample/ParseExample:4"
  input: "test_input/shuffle_batch_join/ExpandDims"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_1"
  op: "QueueEnqueueManyV2"
  input: "test_input/shuffle_batch_join/random_shuffle_queue"
  input: "test_input/ParseExample_1/ParseExample:3"
  input: "test_input/ParseExample_1/ParseExample:4"
  input: "test_input/shuffle_batch_join/ExpandDims_1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "test_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "test_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "test_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/sub"
  op: "Sub"
  input: "test_input/shuffle_batch_join/random_shuffle_queue_Size"
  input: "test_input/shuffle_batch_join/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/Maximum"
  op: "Maximum"
  input: "test_input/shuffle_batch_join/Maximum/x"
  input: "test_input/shuffle_batch_join/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/ToFloat"
  op: "Cast"
  input: "test_input/shuffle_batch_join/Maximum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/mul"
  op: "Mul"
  input: "test_input/shuffle_batch_join/ToFloat"
  input: "test_input/shuffle_batch_join/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/fraction_over_2_of_8_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "test_input/shuffle_batch_join/fraction_over_2_of_8_full"
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/fraction_over_2_of_8_full"
  op: "ScalarSummary"
  input: "test_input/shuffle_batch_join/fraction_over_2_of_8_full/tags"
  input: "test_input/shuffle_batch_join/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join"
  op: "QueueDequeueUpToV2"
  input: "test_input/shuffle_batch_join/random_shuffle_queue"
  input: "test_input/shuffle_batch_join/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/Squeeze"
  op: "Squeeze"
  input: "test_input/shuffle_batch_join:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/TakeManySparseFromTensorsMap"
  op: "TakeManySparseFromTensorsMap"
  input: "test_input/shuffle_batch_join/Squeeze"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@test_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "test_input/shuffle_batch_join/AddManySparseToTensorsMap"
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/control_dependency"
  op: "Identity"
  input: "test_input/shuffle_batch_join"
  input: "^test_input/shuffle_batch_join/TakeManySparseFromTensorsMap"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@test_input/shuffle_batch_join"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/control_dependency_1"
  op: "Identity"
  input: "test_input/shuffle_batch_join:1"
  input: "^test_input/shuffle_batch_join/TakeManySparseFromTensorsMap"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@test_input/shuffle_batch_join"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/control_dependency_2"
  op: "Identity"
  input: "test_input/shuffle_batch_join/TakeManySparseFromTensorsMap"
  input: "^test_input/shuffle_batch_join"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@test_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/control_dependency_3"
  op: "Identity"
  input: "test_input/shuffle_batch_join/TakeManySparseFromTensorsMap:1"
  input: "^test_input/shuffle_batch_join"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@test_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "test_input/shuffle_batch_join/control_dependency_4"
  op: "Identity"
  input: "test_input/shuffle_batch_join/TakeManySparseFromTensorsMap:2"
  input: "^test_input/shuffle_batch_join"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@test_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "PlaceholderWithDefault/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "PlaceholderWithDefault"
  op: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/switch_t"
  op: "Identity"
  input: "cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/switch_f"
  op: "Identity"
  input: "cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/Switch_1"
  op: "Switch"
  input: "train_input/shuffle_batch_join/control_dependency"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/shuffle_batch_join"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
      }
    }
  }
}
node {
  name: "cond/Switch_2"
  op: "Switch"
  input: "train_input/shuffle_batch_join/control_dependency_1"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/shuffle_batch_join"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cond/Switch_3"
  op: "Switch"
  input: "train_input/shuffle_batch_join/control_dependency_3"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cond/Switch_4"
  op: "Switch"
  input: "train_input/shuffle_batch_join/control_dependency_2"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond/Switch_5"
  op: "Switch"
  input: "train_input/shuffle_batch_join/control_dependency_4"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond/Switch_6"
  op: "Switch"
  input: "test_input/shuffle_batch_join/control_dependency"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@test_input/shuffle_batch_join"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
      }
    }
  }
}
node {
  name: "cond/Switch_7"
  op: "Switch"
  input: "test_input/shuffle_batch_join/control_dependency_1"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@test_input/shuffle_batch_join"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cond/Switch_8"
  op: "Switch"
  input: "test_input/shuffle_batch_join/control_dependency_3"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@test_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cond/Switch_9"
  op: "Switch"
  input: "test_input/shuffle_batch_join/control_dependency_2"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@test_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond/Switch_10"
  op: "Switch"
  input: "test_input/shuffle_batch_join/control_dependency_4"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@test_input/shuffle_batch_join/AddManySparseToTensorsMap"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond/Merge"
  op: "Merge"
  input: "cond/Switch_6"
  input: "cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8750
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/Merge_1"
  op: "Merge"
  input: "cond/Switch_7"
  input: "cond/Switch_2:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/Merge_2"
  op: "Merge"
  input: "cond/Switch_8"
  input: "cond/Switch_3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/Merge_2/indices"
  op: "Merge"
  input: "cond/Switch_9"
  input: "cond/Switch_4:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/Merge_2/dense_shape"
  op: "Merge"
  input: "cond/Switch_10"
  input: "cond/Switch_5:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "cond/Merge_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "cond/Merge_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\031\000\000\000^\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "cond/Merge"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "Cast"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/input_raw/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/input_raw"
      }
    }
  }
}
node {
  name: "model/input_raw"
  op: "HistogramSummary"
  input: "model/input_raw/tag"
  input: "cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/Reshape"
  op: "Reshape"
  input: "Reshape_1"
  input: "model/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\031\000\000\000^\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/Reshape_1"
  op: "Reshape"
  input: "Reshape"
  input: "model/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11881770193576813
      }
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11881770193576813
      }
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1/weights/Initializer/random_uniform/max"
  input: "conv1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1/weights/Initializer/random_uniform/RandomUniform"
  input: "conv1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv1/weights/Initializer/random_uniform/mul"
  input: "conv1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Assign"
  op: "Assign"
  input: "conv1/weights"
  input: "conv1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/read"
  op: "Identity"
  input: "conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/conv1/Conv2D"
  op: "Conv2D"
  input: "model/Reshape_1"
  input: "conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "conv1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "conv1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "conv1/BatchNorm/beta"
  input: "conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "conv1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "conv1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "conv1/BatchNorm/moving_mean"
  input: "conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "conv1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "conv1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "conv1/BatchNorm/moving_variance"
  input: "conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "model/conv1/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "model/conv1/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/Const"
  op: "Const"
  input: "^model/conv1/BatchNorm/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/Const_1"
  op: "Const"
  input: "^model/conv1/BatchNorm/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm/Switch_2:1"
  input: "model/conv1/BatchNorm/cond/Const"
  input: "model/conv1/BatchNorm/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "model/conv1/Conv2D"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv1/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "model/conv1/BatchNorm/Const"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv1/BatchNorm/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv1/BatchNorm/beta/read"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "model/conv1/Conv2D"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv1/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "model/conv1/BatchNorm/Const"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv1/BatchNorm/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "conv1/BatchNorm/beta/read"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "conv1/BatchNorm/moving_mean/read"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "conv1/BatchNorm/moving_variance/read"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/Merge"
  op: "Merge"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1:1"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond/Merge_2"
  op: "Merge"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1:2"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/switch_t"
  op: "Identity"
  input: "model/conv1/BatchNorm/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/switch_f"
  op: "Identity"
  input: "model/conv1/BatchNorm/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^model/conv1/BatchNorm/cond_1/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "conv1/BatchNorm/moving_mean/read"
  input: "model/conv1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "model/conv1/BatchNorm/cond/Merge_1"
  input: "model/conv1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv1/BatchNorm/cond/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/sub"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg"
  op: "AssignSub"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/Switch:1"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "conv1/BatchNorm/moving_mean"
  input: "model/conv1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^model/conv1/BatchNorm/cond_1/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "conv1/BatchNorm/moving_variance/read"
  input: "model/conv1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "model/conv1/BatchNorm/cond/Merge_2"
  input: "model/conv1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv1/BatchNorm/cond/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/Switch:1"
  input: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "conv1/BatchNorm/moving_variance"
  input: "model/conv1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/Identity"
  op: "Identity"
  input: "model/conv1/BatchNorm/cond_1/Identity/Switch:1"
  input: "^model/conv1/BatchNorm/cond_1/AssignMovingAvg"
  input: "^model/conv1/BatchNorm/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/Identity/Switch"
  op: "Switch"
  input: "model/conv1/BatchNorm/cond/Merge"
  input: "model/conv1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv1/BatchNorm/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/Switch_1"
  op: "Switch"
  input: "model/conv1/BatchNorm/cond/Merge"
  input: "model/conv1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv1/BatchNorm/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/cond_1/Merge"
  op: "Merge"
  input: "model/conv1/BatchNorm/cond_1/Switch_1"
  input: "model/conv1/BatchNorm/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/Relu"
  op: "Relu"
  input: "model/conv1/BatchNorm/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/pool1/MaxPool"
  op: "MaxPool"
  input: "model/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose"
  op: "Transpose"
  input: "model/pool1/MaxPool"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\257\000\000\000\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape"
  op: "Reshape"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros"
  op: "Fill"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/shape_as_tensor"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/dims"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 175
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill"
  op: "Fill"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/dims"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/ToInt64"
  op: "Cast"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/ToInt32"
  op: "Cast"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/ToInt64"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Equal"
  op: "Equal"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/All"
  op: "All"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Equal"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert"
  op: "Assert"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/All"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_0"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\257\000\000\000\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat"
  op: "ConcatV2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros"
  op: "Fill"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Min"
  op: "Min"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Max"
  op: "Max"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\257\000\000\000\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum"
  op: "Maximum"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum/x"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Minimum"
  op: "Minimum"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  op: "Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  op: "Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
  op: "Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
  op: "Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less"
  op: "Less"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1"
  op: "Less"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  op: "LoopCond"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch"
  op: "Switch"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1"
  op: "Switch"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2"
  op: "Switch"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3"
  op: "Switch"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_2"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add/y"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add"
  op: "Add"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  op: "Split"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split:1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  op: "Split"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  op: "Add"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select"
  op: "Select"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1"
  op: "Select"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1/y"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1"
  op: "Add"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration"
  op: "NextIteration"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit"
  op: "Exit"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_1"
  op: "Exit"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  op: "Exit"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3"
  op: "Exit"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  op: "Range"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros"
  op: "Fill"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/shape_as_tensor"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/dims"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 175
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill"
  op: "Fill"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/dims"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ToInt64"
  op: "Cast"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
  op: "ReverseV2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/ToInt32"
  op: "Cast"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ToInt64"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Equal"
  op: "Equal"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/All"
  op: "All"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Equal"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert"
  op: "Assert"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/All"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_0"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\257\000\000\000\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat"
  op: "ConcatV2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros"
  op: "Fill"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Min"
  op: "Min"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Max"
  op: "Max"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\257\000\000\000\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum"
  op: "Maximum"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum/x"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Minimum"
  op: "Minimum"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  op: "Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  op: "Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
  op: "Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
  op: "Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less"
  op: "Less"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1"
  op: "Less"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  op: "LoopCond"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch"
  op: "Switch"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1"
  op: "Switch"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2"
  op: "Switch"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3"
  op: "Switch"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_2"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add/y"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add"
  op: "Add"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  op: "Split"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split:1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  op: "Split"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  op: "Add"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select"
  op: "Select"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1"
  op: "Select"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1/y"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1"
  op: "Add"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration"
  op: "NextIteration"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit"
  op: "Exit"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_1"
  op: "Exit"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  op: "Exit"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3"
  op: "Exit"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  op: "Range"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\257\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1"
  op: "ReverseV2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat"
  op: "ConcatV2"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\257\000\000\000\002\000\000\000\014\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_1"
  op: "Reshape"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_1"
  op: "Transpose"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/transpose"
  op: "Transpose"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_1"
  input: "model/lstm2d_1/vertical_pass/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 175
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose"
  op: "Transpose"
  input: "model/lstm2d_1/vertical_pass/transpose"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 2
          }
          dim {
            size: 175
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape"
  op: "Reshape"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros"
  op: "Fill"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/shape_as_tensor"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/dims"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 350
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill"
  op: "Fill"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/dims"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/ToInt64"
  op: "Cast"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/ToInt32"
  op: "Cast"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/ToInt64"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 350
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 350
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Equal"
  op: "Equal"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/All"
  op: "All"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Equal"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert"
  op: "Assert"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/All"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_0"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 350
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat"
  op: "ConcatV2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros"
  op: "Fill"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Min"
  op: "Min"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Max"
  op: "Max"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 350
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 350
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum"
  op: "Maximum"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum/x"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Minimum"
  op: "Minimum"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  op: "Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  op: "Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
  op: "Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
  op: "Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less"
  op: "Less"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1"
  op: "Less"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  op: "LoopCond"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch"
  op: "Switch"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1"
  op: "Switch"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2"
  op: "Switch"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3"
  op: "Switch"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_2"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add/y"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add"
  op: "Add"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2314550280570984
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2314550280570984
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  op: "Split"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split:1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  op: "Split"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  op: "Add"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select"
  op: "Select"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1"
  op: "Select"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1/y"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1"
  op: "Add"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration"
  op: "NextIteration"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit"
  op: "Exit"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_1"
  op: "Exit"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  op: "Exit"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3"
  op: "Exit"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  op: "Range"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 350
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000^\001\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros"
  op: "Fill"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/shape_as_tensor"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/dims"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 350
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill"
  op: "Fill"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/dims"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ToInt64"
  op: "Cast"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
  op: "ReverseV2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/ToInt32"
  op: "Cast"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ToInt64"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 350
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 350
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Equal"
  op: "Equal"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/All"
  op: "All"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Equal"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert"
  op: "Assert"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/All"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_0"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 350
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat"
  op: "ConcatV2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros"
  op: "Fill"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Min"
  op: "Min"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Max"
  op: "Max"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 350
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 350
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum"
  op: "Maximum"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum/x"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Minimum"
  op: "Minimum"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  op: "Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  op: "Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
  op: "Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
  op: "Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less"
  op: "Less"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1"
  op: "Less"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  op: "LoopCond"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch"
  op: "Switch"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1"
  op: "Switch"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2"
  op: "Switch"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3"
  op: "Switch"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_2"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add/y"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add"
  op: "Add"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2314550280570984
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2314550280570984
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  op: "Split"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split:1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  op: "Split"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  op: "Add"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select"
  op: "Select"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1"
  op: "Select"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1/y"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1"
  op: "Add"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration"
  op: "NextIteration"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit"
  op: "Exit"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_1"
  op: "Exit"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  op: "Exit"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3"
  op: "Exit"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  op: "Range"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 350
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000^\001\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1"
  op: "ReverseV2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat"
  op: "ConcatV2"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\014\000\000\000\002\000\000\000\257\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_1"
  op: "Reshape"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 2
          }
          dim {
            size: 175
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_1"
  op: "Transpose"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 175
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_1/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_1/transpose"
  op: "Transpose"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_1"
  input: "model/lstm2d_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2/weights/Initializer/random_uniform/max"
  input: "conv2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2/weights/Initializer/random_uniform/RandomUniform"
  input: "conv2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv2/weights/Initializer/random_uniform/mul"
  input: "conv2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Assign"
  op: "Assign"
  input: "conv2/weights"
  input: "conv2/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/read"
  op: "Identity"
  input: "conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/conv2/Conv2D"
  op: "Conv2D"
  input: "model/lstm2d_1/transpose"
  input: "conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "conv2/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "conv2/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "conv2/BatchNorm/beta"
  input: "conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "conv2/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "conv2/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "conv2/BatchNorm/moving_mean"
  input: "conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "conv2/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "conv2/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "conv2/BatchNorm/moving_variance"
  input: "conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/switch_t"
  op: "Identity"
  input: "model/conv2/BatchNorm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/switch_f"
  op: "Identity"
  input: "model/conv2/BatchNorm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/Const"
  op: "Const"
  input: "^model/conv2/BatchNorm/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/Const_1"
  op: "Const"
  input: "^model/conv2/BatchNorm/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm/Switch_2:1"
  input: "model/conv2/BatchNorm/cond/Const"
  input: "model/conv2/BatchNorm/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "model/conv2/Conv2D"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv2/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "model/conv2/BatchNorm/Const"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv2/BatchNorm/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv2/BatchNorm/beta/read"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "model/conv2/Conv2D"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv2/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "model/conv2/BatchNorm/Const"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv2/BatchNorm/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "conv2/BatchNorm/beta/read"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "conv2/BatchNorm/moving_mean/read"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "conv2/BatchNorm/moving_variance/read"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/Merge"
  op: "Merge"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/Merge_1"
  op: "Merge"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1:1"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond/Merge_2"
  op: "Merge"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1:2"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/switch_t"
  op: "Identity"
  input: "model/conv2/BatchNorm/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/switch_f"
  op: "Identity"
  input: "model/conv2/BatchNorm/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/decay"
  op: "Const"
  input: "^model/conv2/BatchNorm/cond_1/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch:1"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "conv2/BatchNorm/moving_mean/read"
  input: "model/conv2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/sub/Switch_1"
  op: "Switch"
  input: "model/conv2/BatchNorm/cond/Merge_1"
  input: "model/conv2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv2/BatchNorm/cond/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/sub"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg"
  op: "AssignSub"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/Switch:1"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "conv2/BatchNorm/moving_mean"
  input: "model/conv2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^model/conv2/BatchNorm/cond_1/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch:1"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "conv2/BatchNorm/moving_variance/read"
  input: "model/conv2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/sub/Switch_1"
  op: "Switch"
  input: "model/conv2/BatchNorm/cond/Merge_2"
  input: "model/conv2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv2/BatchNorm/cond/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/sub"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/Switch:1"
  input: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "conv2/BatchNorm/moving_variance"
  input: "model/conv2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/Identity"
  op: "Identity"
  input: "model/conv2/BatchNorm/cond_1/Identity/Switch:1"
  input: "^model/conv2/BatchNorm/cond_1/AssignMovingAvg"
  input: "^model/conv2/BatchNorm/cond_1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/Identity/Switch"
  op: "Switch"
  input: "model/conv2/BatchNorm/cond/Merge"
  input: "model/conv2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv2/BatchNorm/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/Switch_1"
  op: "Switch"
  input: "model/conv2/BatchNorm/cond/Merge"
  input: "model/conv2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/conv2/BatchNorm/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/cond_1/Merge"
  op: "Merge"
  input: "model/conv2/BatchNorm/cond_1/Switch_1"
  input: "model/conv2/BatchNorm/cond_1/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/Relu"
  op: "Relu"
  input: "model/conv2/BatchNorm/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/pool2/MaxPool"
  op: "MaxPool"
  input: "model/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 87
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose"
  op: "Transpose"
  input: "model/pool2/MaxPool"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "W\000\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape"
  op: "Reshape"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros"
  op: "Fill"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/shape_as_tensor"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/dims"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 87
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill"
  op: "Fill"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/dims"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/ToInt64"
  op: "Cast"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/ToInt32"
  op: "Cast"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/ToInt64"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Equal"
  op: "Equal"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/All"
  op: "All"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Equal"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert"
  op: "Assert"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/All"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_0"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "W\000\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 62
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat"
  op: "ConcatV2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros"
  op: "Fill"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Min"
  op: "Min"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Max"
  op: "Max"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 62
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "W\000\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum"
  op: "Maximum"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum/x"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Minimum"
  op: "Minimum"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  op: "Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  op: "Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
  op: "Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
  op: "Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less"
  op: "Less"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1"
  op: "Less"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  op: "LoopCond"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch"
  op: "Switch"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1"
  op: "Switch"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2"
  op: "Switch"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3"
  op: "Switch"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_2"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add/y"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add"
  op: "Add"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "~\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.12666009366512299
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.12666009366512299
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  op: "Split"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split:1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 126
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  op: "Split"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  op: "Add"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select"
  op: "Select"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1"
  op: "Select"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1/y"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1"
  op: "Add"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration"
  op: "NextIteration"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit"
  op: "Exit"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_1"
  op: "Exit"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  op: "Exit"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3"
  op: "Exit"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  op: "Range"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 62
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "W\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 62
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros"
  op: "Fill"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/shape_as_tensor"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/dims"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 87
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill"
  op: "Fill"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/dims"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ToInt64"
  op: "Cast"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
  op: "ReverseV2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/ToInt32"
  op: "Cast"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ToInt64"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Equal"
  op: "Equal"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/All"
  op: "All"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Equal"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert"
  op: "Assert"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/All"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_0"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "W\000\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 62
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat"
  op: "ConcatV2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros"
  op: "Fill"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Min"
  op: "Min"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Max"
  op: "Max"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 62
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "W\000\000\000\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum"
  op: "Maximum"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum/x"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Minimum"
  op: "Minimum"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  op: "Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  op: "Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
  op: "Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
  op: "Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less"
  op: "Less"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1"
  op: "Less"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  op: "LoopCond"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch"
  op: "Switch"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1"
  op: "Switch"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2"
  op: "Switch"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3"
  op: "Switch"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_2"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add/y"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add"
  op: "Add"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "~\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.12666009366512299
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.12666009366512299
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  op: "Split"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split:1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 126
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  op: "Split"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  op: "Add"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select"
  op: "Select"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1"
  op: "Select"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1/y"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1"
  op: "Add"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration"
  op: "NextIteration"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit"
  op: "Exit"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_1"
  op: "Exit"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  op: "Exit"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3"
  op: "Exit"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  op: "Range"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 62
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "W\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 62
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1"
  op: "ReverseV2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat"
  op: "ConcatV2"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "W\000\000\000\002\000\000\000\006\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_1"
  op: "Reshape"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_1"
  op: "Transpose"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 87
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/transpose"
  op: "Transpose"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_1"
  input: "model/lstm2d_2/vertical_pass/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 87
          }
          dim {
            size: 6
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose"
  op: "Transpose"
  input: "model/lstm2d_2/vertical_pass/transpose"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 2
          }
          dim {
            size: 87
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\006\000\000\000\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape"
  op: "Reshape"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros"
  op: "Fill"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/shape_as_tensor"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/dims"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 174
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill"
  op: "Fill"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/dims"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/ToInt64"
  op: "Cast"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/Fill"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/ToInt32"
  op: "Cast"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/ToInt64"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 174
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 174
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Equal"
  op: "Equal"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/All"
  op: "All"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Equal"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert"
  op: "Assert"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/All"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_0"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/stack"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert/data_2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/sequence_length"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\006\000\000\000\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Shape_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 174
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 62
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat"
  op: "ConcatV2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros"
  op: "Fill"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/concat"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Min"
  op: "Min"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Max"
  op: "Max"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 174
        }
        dim {
          size: 62
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 174
        }
        dim {
          size: 124
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\006\000\000\000\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum"
  op: "Maximum"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum/x"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Minimum"
  op: "Minimum"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  op: "Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  op: "Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
  op: "Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
  op: "Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less"
  op: "Less"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1"
  op: "Less"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  op: "LoopCond"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch"
  op: "Switch"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1"
  op: "Switch"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2"
  op: "Switch"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3"
  op: "Switch"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_2"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add/y"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add"
  op: "Add"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\272\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11757927387952805
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11757927387952805
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 186
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  op: "Split"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split:1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 186
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  op: "Split"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  op: "Add"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select"
  op: "Select"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1"
  op: "Select"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1/y"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1"
  op: "Add"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration"
  op: "NextIteration"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit"
  op: "Exit"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_1"
  op: "Exit"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  op: "Exit"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3"
  op: "Exit"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  op: "Range"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 174
        }
        dim {
          size: 62
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\256\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 62
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros"
  op: "Fill"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/shape_as_tensor"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/dims"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 174
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill"
  op: "Fill"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/dims"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ToInt64"
  op: "Cast"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/Fill"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
  op: "ReverseV2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/ToInt32"
  op: "Cast"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ToInt64"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 174
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 174
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Equal"
  op: "Equal"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/All"
  op: "All"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Equal"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert"
  op: "Assert"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/All"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_0"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/stack"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert/data_2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/sequence_length"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\006\000\000\000\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Shape_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 174
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 62
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat"
  op: "ConcatV2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros"
  op: "Fill"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/concat"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Min"
  op: "Min"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Max"
  op: "Max"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 174
        }
        dim {
          size: 62
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 174
        }
        dim {
          size: 124
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\006\000\000\000\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/Shape"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/start"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/strided_slice"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum"
  op: "Maximum"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum/x"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Minimum"
  op: "Minimum"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  op: "Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  op: "Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
  op: "Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
  op: "Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less"
  op: "Less"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1"
  op: "Less"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  op: "LoopCond"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch"
  op: "Switch"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1"
  op: "Switch"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2"
  op: "Switch"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3"
  op: "Switch"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_2"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add/y"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add"
  op: "Add"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\272\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11757927387952805
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11757927387952805
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 186
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  op: "Split"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split:1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 186
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  op: "Split"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  op: "Add"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select"
  op: "Select"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1"
  op: "Select"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1/y"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1"
  op: "Add"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration"
  op: "NextIteration"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit"
  op: "Exit"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_1"
  op: "Exit"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  op: "Exit"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3"
  op: "Exit"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  op: "Range"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/start"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 174
        }
        dim {
          size: 62
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\256\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 62
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1"
  op: "ReverseV2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat"
  op: "ConcatV2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\002\000\000\000W\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_1"
  op: "Reshape"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 2
          }
          dim {
            size: 87
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_1"
  op: "Transpose"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 87
          }
          dim {
            size: 6
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/lstm2d_2/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/lstm2d_2/transpose"
  op: "Transpose"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_1"
  input: "model/lstm2d_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 87
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/transpose"
  op: "Transpose"
  input: "model/lstm2d_2/transpose"
  input: "model/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\350\002\000\000"
      }
    }
  }
}
node {
  name: "model/Reshape_2"
  op: "Reshape"
  input: "model/transpose"
  input: "model/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 744
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\002\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "ctc_loss_1/w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07500000298023224
      }
    }
  }
}
node {
  name: "ctc_loss_1/w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "ctc_loss_1/w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ctc_loss_1/w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "ctc_loss_1/w/Initializer/truncated_normal/TruncatedNormal"
  input: "ctc_loss_1/w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/w/Initializer/truncated_normal"
  op: "Add"
  input: "ctc_loss_1/w/Initializer/truncated_normal/mul"
  input: "ctc_loss_1/w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 744
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/w/Assign"
  op: "Assign"
  input: "ctc_loss_1/w"
  input: "ctc_loss_1/w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/w/read"
  op: "Identity"
  input: "ctc_loss_1/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/b/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "ctc_loss_1/b/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/b/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07500000298023224
      }
    }
  }
}
node {
  name: "ctc_loss_1/b/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "ctc_loss_1/b/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ctc_loss_1/b/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "ctc_loss_1/b/Initializer/truncated_normal/TruncatedNormal"
  input: "ctc_loss_1/b/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/b/Initializer/truncated_normal"
  op: "Add"
  input: "ctc_loss_1/b/Initializer/truncated_normal/mul"
  input: "ctc_loss_1/b/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/b/Assign"
  op: "Assign"
  input: "ctc_loss_1/b"
  input: "ctc_loss_1/b/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/b/read"
  op: "Identity"
  input: "ctc_loss_1/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07500000298023224
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "ctc_loss_1/w1/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ctc_loss_1/w1/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "ctc_loss_1/w1/Initializer/truncated_normal/TruncatedNormal"
  input: "ctc_loss_1/w1/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1/Initializer/truncated_normal"
  op: "Add"
  input: "ctc_loss_1/w1/Initializer/truncated_normal/mul"
  input: "ctc_loss_1/w1/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/w1/Assign"
  op: "Assign"
  input: "ctc_loss_1/w1"
  input: "ctc_loss_1/w1/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/w1/read"
  op: "Identity"
  input: "ctc_loss_1/w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07500000298023224
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "ctc_loss_1/b1/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ctc_loss_1/b1/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "ctc_loss_1/b1/Initializer/truncated_normal/TruncatedNormal"
  input: "ctc_loss_1/b1/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1/Initializer/truncated_normal"
  op: "Add"
  input: "ctc_loss_1/b1/Initializer/truncated_normal/mul"
  input: "ctc_loss_1/b1/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/b1/Assign"
  op: "Assign"
  input: "ctc_loss_1/b1"
  input: "ctc_loss_1/b1/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/b1/read"
  op: "Identity"
  input: "ctc_loss_1/b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/Train/histogram-b-ctc/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/Train/histogram-b-ctc"
      }
    }
  }
}
node {
  name: "model/Train/histogram-b-ctc"
  op: "HistogramSummary"
  input: "model/Train/histogram-b-ctc/tag"
  input: "ctc_loss_1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/Train/histogram-w-ctc/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/Train/histogram-w-ctc"
      }
    }
  }
}
node {
  name: "model/Train/histogram-w-ctc"
  op: "HistogramSummary"
  input: "model/Train/histogram-w-ctc/tag"
  input: "ctc_loss_1/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/MatMul"
  op: "MatMul"
  input: "model/Reshape_2"
  input: "ctc_loss_1/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/add"
  op: "Add"
  input: "model/MatMul"
  input: "ctc_loss_1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/Switch"
  op: "Switch"
  input: "PlaceholderWithDefault"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/switch_t"
  op: "Identity"
  input: "model/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/switch_f"
  op: "Identity"
  input: "model/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/pred_id"
  op: "Identity"
  input: "PlaceholderWithDefault"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/keep_prob"
  op: "Const"
  input: "^model/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/Shape"
  op: "Const"
  input: "^model/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^model/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^model/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/dropout/cond/dropout/random_uniform/max"
  input: "model/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "model/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "model/dropout/cond/dropout/random_uniform/mul"
  input: "model/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/add"
  op: "Add"
  input: "model/dropout/cond/dropout/keep_prob"
  input: "model/dropout/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/Floor"
  op: "Floor"
  input: "model/dropout/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/div"
  op: "RealDiv"
  input: "model/dropout/cond/dropout/div/Switch:1"
  input: "model/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/div/Switch"
  op: "Switch"
  input: "model/add"
  input: "model/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/dropout/mul"
  op: "Mul"
  input: "model/dropout/cond/dropout/div"
  input: "model/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/Identity"
  op: "Identity"
  input: "model/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "model/add"
  input: "model/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/dropout/cond/Merge"
  op: "Merge"
  input: "model/dropout/cond/Identity"
  input: "model/dropout/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/MatMul_1"
  op: "MatMul"
  input: "model/dropout/cond/Merge"
  input: "ctc_loss_1/w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/add_1"
  op: "Add"
  input: "model/MatMul_1"
  input: "ctc_loss_1/b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "model/Reshape_3"
  op: "Reshape"
  input: "model/add_1"
  input: "model/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/conv1/weights/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/conv1/weights"
      }
    }
  }
}
node {
  name: "model/conv1/weights"
  op: "HistogramSummary"
  input: "model/conv1/weights/tag"
  input: "conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/beta/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/beta"
  op: "HistogramSummary"
  input: "model/conv1/BatchNorm/beta/tag"
  input: "conv1/BatchNorm/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/moving_mean/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/moving_mean"
  op: "HistogramSummary"
  input: "model/conv1/BatchNorm/moving_mean/tag"
  input: "conv1/BatchNorm/moving_mean/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/moving_variance/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/conv1/BatchNorm/moving_variance"
  op: "HistogramSummary"
  input: "model/conv1/BatchNorm/moving_variance/tag"
  input: "conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/weights/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/conv2/weights"
      }
    }
  }
}
node {
  name: "model/conv2/weights"
  op: "HistogramSummary"
  input: "model/conv2/weights/tag"
  input: "conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/beta/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/beta"
  op: "HistogramSummary"
  input: "model/conv2/BatchNorm/beta/tag"
  input: "conv2/BatchNorm/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/moving_mean/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/moving_mean"
  op: "HistogramSummary"
  input: "model/conv2/BatchNorm/moving_mean/tag"
  input: "conv2/BatchNorm/moving_mean/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/moving_variance/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "model/conv2/BatchNorm/moving_variance"
  op: "HistogramSummary"
  input: "model/conv2/BatchNorm/moving_variance/tag"
  input: "conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "model/sub"
  op: "Sub"
  input: "Reshape_1"
  input: "model/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/add_2"
  op: "Add"
  input: "model/sub"
  input: "model/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/Maximum"
  op: "Maximum"
  input: "model/add_2"
  input: "model/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/FloorDiv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/FloorDiv"
  op: "FloorDiv"
  input: "model/Maximum"
  input: "model/FloorDiv/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 55
      }
    }
  }
}
node {
  name: "model/Minimum"
  op: "Minimum"
  input: "model/FloorDiv"
  input: "model/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/Maximum_1"
  op: "Maximum"
  input: "model/Minimum"
  input: "model/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/ones"
  op: "Fill"
  input: "model/ones/shape_as_tensor"
  input: "model/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 55
      }
    }
  }
}
node {
  name: "model/mul"
  op: "Mul"
  input: "model/ones"
  input: "model/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/ones_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/ones_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/ones_1"
  op: "Fill"
  input: "model/ones_1/shape_as_tensor"
  input: "model/ones_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 87
      }
    }
  }
}
node {
  name: "model/mul_1"
  op: "Mul"
  input: "model/ones_1"
  input: "model/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/CTC-loss/CTCLoss"
  op: "CTCLoss"
  input: "model/Reshape_3"
  input: "cond/Merge_2/indices"
  input: "Cast_1"
  input: "model/mul_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "ctc_merge_repeated"
    value {
      b: true
    }
  }
  attr {
    key: "ignore_longer_outputs_than_inputs"
    value {
      b: false
    }
  }
  attr {
    key: "preprocess_collapse_repeated"
    value {
      b: false
    }
  }
}
node {
  name: "model/CTC-loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/CTC-loss/Mean"
  op: "Mean"
  input: "model/CTC-loss/CTCLoss"
  input: "model/CTC-loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/label_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/label_loss"
      }
    }
  }
}
node {
  name: "model/label_loss"
  op: "ScalarSummary"
  input: "model/label_loss/tags"
  input: "model/CTC-loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/reg_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/reg_loss"
      }
    }
  }
}
node {
  name: "model/reg_loss"
  op: "ScalarSummary"
  input: "model/reg_loss/tags"
  input: "model/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/Prediction/CTCBeamSearchDecoder"
  op: "CTCBeamSearchDecoder"
  input: "model/Reshape_3"
  input: "model/mul_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "beam_width"
    value {
      i: 100
    }
  }
  attr {
    key: "merge_repeated"
    value {
      b: true
    }
  }
  attr {
    key: "top_paths"
    value {
      i: 2
    }
  }
}
node {
  name: "model/Prediction/Cast"
  op: "Cast"
  input: "model/Prediction/CTCBeamSearchDecoder:2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/Prediction/edit_distance"
  op: "EditDistance"
  input: "model/Prediction/CTCBeamSearchDecoder"
  input: "model/Prediction/Cast"
  input: "model/Prediction/CTCBeamSearchDecoder:4"
  input: "cond/Merge_2/indices"
  input: "Cast_1"
  input: "cond/Merge_2/dense_shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "normalize"
    value {
      b: true
    }
  }
}
node {
  name: "model/Prediction/Rank"
  op: "Rank"
  input: "model/Prediction/edit_distance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/Prediction/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/Prediction/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/Prediction/range"
  op: "Range"
  input: "model/Prediction/range/start"
  input: "model/Prediction/Rank"
  input: "model/Prediction/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/Prediction/Mean"
  op: "Mean"
  input: "model/Prediction/edit_distance"
  input: "model/Prediction/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/mul_2"
  op: "Mul"
  input: "model/mul_2/x"
  input: "model/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/add_3"
  op: "Add"
  input: "model/mul_2"
  input: "model/CTC-loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/gradients/Fill"
  op: "Fill"
  input: "model/gradients/Shape"
  input: "model/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/gradients/f_count_1"
  op: "Enter"
  input: "model/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge"
  op: "Merge"
  input: "model/gradients/f_count_1"
  input: "model/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch"
  op: "Switch"
  input: "model/gradients/Merge"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Add/y"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/Add"
  op: "Add"
  input: "model/gradients/Switch:1"
  input: "model/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration"
  op: "NextIteration"
  input: "model/gradients/Add"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_2"
  op: "Exit"
  input: "model/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/b_count_1"
  op: "Enter"
  input: "model/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_1"
  op: "Merge"
  input: "model/gradients/b_count_1"
  input: "model/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "model/gradients/Merge_1"
  input: "model/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "model/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/b_count_2"
  op: "LoopCond"
  input: "model/gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_1"
  op: "Switch"
  input: "model/gradients/Merge_1"
  input: "model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Sub"
  op: "Sub"
  input: "model/gradients/Switch_1:1"
  input: "model/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_1"
  op: "NextIteration"
  input: "model/gradients/Sub"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_3"
  op: "Exit"
  input: "model/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/gradients/f_count_4"
  op: "Enter"
  input: "model/gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_2"
  op: "Merge"
  input: "model/gradients/f_count_4"
  input: "model/gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_2"
  op: "Switch"
  input: "model/gradients/Merge_2"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Add_1/y"
  op: "Const"
  input: "^model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/Add_1"
  op: "Add"
  input: "model/gradients/Switch_2:1"
  input: "model/gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_2"
  op: "NextIteration"
  input: "model/gradients/Add_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_5"
  op: "Exit"
  input: "model/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/b_count_5"
  op: "Enter"
  input: "model/gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_3"
  op: "Merge"
  input: "model/gradients/b_count_5"
  input: "model/gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "model/gradients/Merge_3"
  input: "model/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "model/gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/b_count_6"
  op: "LoopCond"
  input: "model/gradients/GreaterEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_3"
  op: "Switch"
  input: "model/gradients/Merge_3"
  input: "model/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Sub_1"
  op: "Sub"
  input: "model/gradients/Switch_3:1"
  input: "model/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_3"
  op: "NextIteration"
  input: "model/gradients/Sub_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_7"
  op: "Exit"
  input: "model/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/gradients/f_count_7"
  op: "Enter"
  input: "model/gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_4"
  op: "Merge"
  input: "model/gradients/f_count_7"
  input: "model/gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_4"
  op: "Switch"
  input: "model/gradients/Merge_4"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Add_2/y"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/Add_2"
  op: "Add"
  input: "model/gradients/Switch_4:1"
  input: "model/gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_4"
  op: "NextIteration"
  input: "model/gradients/Add_2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_8"
  op: "Exit"
  input: "model/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/b_count_9"
  op: "Enter"
  input: "model/gradients/f_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_5"
  op: "Merge"
  input: "model/gradients/b_count_9"
  input: "model/gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "model/gradients/Merge_5"
  input: "model/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "model/gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/b_count_10"
  op: "LoopCond"
  input: "model/gradients/GreaterEqual_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_5"
  op: "Switch"
  input: "model/gradients/Merge_5"
  input: "model/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Sub_2"
  op: "Sub"
  input: "model/gradients/Switch_5:1"
  input: "model/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_5"
  op: "NextIteration"
  input: "model/gradients/Sub_2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_11"
  op: "Exit"
  input: "model/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/gradients/f_count_10"
  op: "Enter"
  input: "model/gradients/f_count_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_6"
  op: "Merge"
  input: "model/gradients/f_count_10"
  input: "model/gradients/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_6"
  op: "Switch"
  input: "model/gradients/Merge_6"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Add_3/y"
  op: "Const"
  input: "^model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/Add_3"
  op: "Add"
  input: "model/gradients/Switch_6:1"
  input: "model/gradients/Add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_6"
  op: "NextIteration"
  input: "model/gradients/Add_3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_11"
  op: "Exit"
  input: "model/gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/b_count_13"
  op: "Enter"
  input: "model/gradients/f_count_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_7"
  op: "Merge"
  input: "model/gradients/b_count_13"
  input: "model/gradients/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_3"
  op: "GreaterEqual"
  input: "model/gradients/Merge_7"
  input: "model/gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_3/Enter"
  op: "Enter"
  input: "model/gradients/b_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/b_count_14"
  op: "LoopCond"
  input: "model/gradients/GreaterEqual_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_7"
  op: "Switch"
  input: "model/gradients/Merge_7"
  input: "model/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Sub_3"
  op: "Sub"
  input: "model/gradients/Switch_7:1"
  input: "model/gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_7"
  op: "NextIteration"
  input: "model/gradients/Sub_3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_15"
  op: "Exit"
  input: "model/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/gradients/f_count_13"
  op: "Enter"
  input: "model/gradients/f_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_8"
  op: "Merge"
  input: "model/gradients/f_count_13"
  input: "model/gradients/NextIteration_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_8"
  op: "Switch"
  input: "model/gradients/Merge_8"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Add_4/y"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/Add_4"
  op: "Add"
  input: "model/gradients/Switch_8:1"
  input: "model/gradients/Add_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_8"
  op: "NextIteration"
  input: "model/gradients/Add_4"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_14"
  op: "Exit"
  input: "model/gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/b_count_17"
  op: "Enter"
  input: "model/gradients/f_count_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_9"
  op: "Merge"
  input: "model/gradients/b_count_17"
  input: "model/gradients/NextIteration_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_4"
  op: "GreaterEqual"
  input: "model/gradients/Merge_9"
  input: "model/gradients/GreaterEqual_4/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_4/Enter"
  op: "Enter"
  input: "model/gradients/b_count_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/b_count_18"
  op: "LoopCond"
  input: "model/gradients/GreaterEqual_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_9"
  op: "Switch"
  input: "model/gradients/Merge_9"
  input: "model/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Sub_4"
  op: "Sub"
  input: "model/gradients/Switch_9:1"
  input: "model/gradients/GreaterEqual_4/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_9"
  op: "NextIteration"
  input: "model/gradients/Sub_4"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_19"
  op: "Exit"
  input: "model/gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/gradients/f_count_16"
  op: "Enter"
  input: "model/gradients/f_count_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_10"
  op: "Merge"
  input: "model/gradients/f_count_16"
  input: "model/gradients/NextIteration_10"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_10"
  op: "Switch"
  input: "model/gradients/Merge_10"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Add_5/y"
  op: "Const"
  input: "^model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/Add_5"
  op: "Add"
  input: "model/gradients/Switch_10:1"
  input: "model/gradients/Add_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_10"
  op: "NextIteration"
  input: "model/gradients/Add_5"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_17"
  op: "Exit"
  input: "model/gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/b_count_21"
  op: "Enter"
  input: "model/gradients/f_count_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_11"
  op: "Merge"
  input: "model/gradients/b_count_21"
  input: "model/gradients/NextIteration_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_5"
  op: "GreaterEqual"
  input: "model/gradients/Merge_11"
  input: "model/gradients/GreaterEqual_5/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_5/Enter"
  op: "Enter"
  input: "model/gradients/b_count_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/b_count_22"
  op: "LoopCond"
  input: "model/gradients/GreaterEqual_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_11"
  op: "Switch"
  input: "model/gradients/Merge_11"
  input: "model/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Sub_5"
  op: "Sub"
  input: "model/gradients/Switch_11:1"
  input: "model/gradients/GreaterEqual_5/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_11"
  op: "NextIteration"
  input: "model/gradients/Sub_5"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_23"
  op: "Exit"
  input: "model/gradients/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/gradients/f_count_19"
  op: "Enter"
  input: "model/gradients/f_count_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_12"
  op: "Merge"
  input: "model/gradients/f_count_19"
  input: "model/gradients/NextIteration_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_12"
  op: "Switch"
  input: "model/gradients/Merge_12"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Add_6/y"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/Add_6"
  op: "Add"
  input: "model/gradients/Switch_12:1"
  input: "model/gradients/Add_6/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_12"
  op: "NextIteration"
  input: "model/gradients/Add_6"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_20"
  op: "Exit"
  input: "model/gradients/Switch_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/b_count_25"
  op: "Enter"
  input: "model/gradients/f_count_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_13"
  op: "Merge"
  input: "model/gradients/b_count_25"
  input: "model/gradients/NextIteration_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_6"
  op: "GreaterEqual"
  input: "model/gradients/Merge_13"
  input: "model/gradients/GreaterEqual_6/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_6/Enter"
  op: "Enter"
  input: "model/gradients/b_count_24"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/b_count_26"
  op: "LoopCond"
  input: "model/gradients/GreaterEqual_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_13"
  op: "Switch"
  input: "model/gradients/Merge_13"
  input: "model/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Sub_6"
  op: "Sub"
  input: "model/gradients/Switch_13:1"
  input: "model/gradients/GreaterEqual_6/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_13"
  op: "NextIteration"
  input: "model/gradients/Sub_6"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_27"
  op: "Exit"
  input: "model/gradients/Switch_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/gradients/f_count_22"
  op: "Enter"
  input: "model/gradients/f_count_21"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_14"
  op: "Merge"
  input: "model/gradients/f_count_22"
  input: "model/gradients/NextIteration_14"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_14"
  op: "Switch"
  input: "model/gradients/Merge_14"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Add_7/y"
  op: "Const"
  input: "^model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/Add_7"
  op: "Add"
  input: "model/gradients/Switch_14:1"
  input: "model/gradients/Add_7/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_14"
  op: "NextIteration"
  input: "model/gradients/Add_7"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/f_count_23"
  op: "Exit"
  input: "model/gradients/Switch_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/b_count_29"
  op: "Enter"
  input: "model/gradients/f_count_23"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/Merge_15"
  op: "Merge"
  input: "model/gradients/b_count_29"
  input: "model/gradients/NextIteration_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_7"
  op: "GreaterEqual"
  input: "model/gradients/Merge_15"
  input: "model/gradients/GreaterEqual_7/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/GreaterEqual_7/Enter"
  op: "Enter"
  input: "model/gradients/b_count_28"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/b_count_30"
  op: "LoopCond"
  input: "model/gradients/GreaterEqual_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_15"
  op: "Switch"
  input: "model/gradients/Merge_15"
  input: "model/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Sub_7"
  op: "Sub"
  input: "model/gradients/Switch_15:1"
  input: "model/gradients/GreaterEqual_7/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/NextIteration_15"
  op: "NextIteration"
  input: "model/gradients/Sub_7"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/b_count_31"
  op: "Exit"
  input: "model/gradients/Switch_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/Fill"
}
node {
  name: "model/gradients/model/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/Fill"
  input: "^model/gradients/model/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/Fill"
  input: "^model/gradients/model/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/CTC-loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/CTC-loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/add_3_grad/tuple/control_dependency_1"
  input: "model/gradients/model/CTC-loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/CTC-loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/CTC-loss/Mean_grad/Tile"
  op: "Tile"
  input: "model/gradients/model/CTC-loss/Mean_grad/Reshape"
  input: "model/gradients/model/CTC-loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/CTC-loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/gradients/model/CTC-loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "model/gradients/model/CTC-loss/Mean_grad/Tile"
  input: "model/gradients/model/CTC-loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like"
  op: "ZerosLike"
  input: "model/CTC-loss/CTCLoss:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/CTC-loss/CTCLoss_grad/PreventGradient"
  op: "PreventGradient"
  input: "model/CTC-loss/CTCLoss:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second  derivative of ctc_loss due to the fused implementation\'s interaction  with tf.gradients()"
    }
  }
}
node {
  name: "model/gradients/model/CTC-loss/CTCLoss_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/CTC-loss/CTCLoss_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/gradients/model/CTC-loss/Mean_grad/truediv"
  input: "model/gradients/model/CTC-loss/CTCLoss_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/CTC-loss/CTCLoss_grad/mul"
  op: "Mul"
  input: "model/gradients/model/CTC-loss/CTCLoss_grad/ExpandDims"
  input: "model/gradients/model/CTC-loss/CTCLoss_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/Reshape_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/CTC-loss/CTCLoss_grad/mul"
  input: "model/gradients/model/Reshape_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "model/gradients/model/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/gradients/model/add_1_grad/Shape"
  input: "model/gradients/model/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_1_grad/Sum"
  op: "Sum"
  input: "model/gradients/model/Reshape_3_grad/Reshape"
  input: "model/gradients/model/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/add_1_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/add_1_grad/Sum"
  input: "model/gradients/model/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_1_grad/Sum_1"
  op: "Sum"
  input: "model/gradients/model/Reshape_3_grad/Reshape"
  input: "model/gradients/model/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/gradients/model/add_1_grad/Sum_1"
  input: "model/gradients/model/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/add_1_grad/Reshape"
  input: "^model/gradients/model/add_1_grad/Reshape_1"
}
node {
  name: "model/gradients/model/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/add_1_grad/Reshape"
  input: "^model/gradients/model/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/add_1_grad/Reshape_1"
  input: "^model/gradients/model/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "model/gradients/model/add_1_grad/tuple/control_dependency"
  input: "ctc_loss_1/w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "model/dropout/cond/Merge"
  input: "model/gradients/model/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/MatMul_1_grad/MatMul"
  input: "^model/gradients/model/MatMul_1_grad/MatMul_1"
}
node {
  name: "model/gradients/model/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/MatMul_1_grad/MatMul"
  input: "^model/gradients/model/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/MatMul_1_grad/MatMul_1"
  input: "^model/gradients/model/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/gradients/model/MatMul_1_grad/tuple/control_dependency"
  input: "model/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "model/gradients/model/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/dropout/cond/Merge_grad/cond_grad"
  input: "^model/gradients/model/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/dropout/cond/Merge_grad/cond_grad:1"
  input: "^model/gradients/model/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "model/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "model/dropout/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/dropout/cond/dropout/mul_grad/Mul"
  input: "^model/gradients/model/dropout/cond/dropout/mul_grad/Mul_1"
}
node {
  name: "model/gradients/model/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/dropout/cond/dropout/mul_grad/Mul"
  input: "^model/gradients/model/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/dropout/cond/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/dropout/cond/dropout/mul_grad/Mul_1"
  input: "^model/gradients/model/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/dropout/cond/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_16"
  op: "Switch"
  input: "model/add"
  input: "model/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_1"
  op: "Shape"
  input: "model/gradients/Switch_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros"
  op: "Fill"
  input: "model/gradients/Shape_1"
  input: "model/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/model/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "model/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/Shape"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/gradients/model/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  input: "model/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/RealDiv"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/Sum"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/dropout/cond/dropout/div/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/Neg"
  input: "model/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/RealDiv_1"
  input: "model/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "model/gradients/model/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/mul"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/Sum_1"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/dropout/cond/dropout/div_grad/Reshape"
  input: "^model/gradients/model/dropout/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/Reshape"
  input: "^model/gradients/model/dropout/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/dropout/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/Reshape_1"
  input: "^model/gradients/model/dropout/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/dropout/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_17"
  op: "Switch"
  input: "model/add"
  input: "model/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_2"
  op: "Shape"
  input: "model/gradients/Switch_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_1"
  op: "Fill"
  input: "model/gradients/Shape_2"
  input: "model/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/dropout/cond/dropout/div/Switch_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/zeros_1"
  input: "model/gradients/model/dropout/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN"
  op: "AddN"
  input: "model/gradients/model/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "model/gradients/model/dropout/cond/dropout/div/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "model/gradients/model/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/gradients/model/add_grad/Shape"
  input: "model/gradients/model/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_grad/Sum"
  op: "Sum"
  input: "model/gradients/AddN"
  input: "model/gradients/model/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/add_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/add_grad/Sum"
  input: "model/gradients/model/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_grad/Sum_1"
  op: "Sum"
  input: "model/gradients/AddN"
  input: "model/gradients/model/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/gradients/model/add_grad/Sum_1"
  input: "model/gradients/model/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/add_grad/Reshape"
  input: "^model/gradients/model/add_grad/Reshape_1"
}
node {
  name: "model/gradients/model/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/add_grad/Reshape"
  input: "^model/gradients/model/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/add_grad/Reshape_1"
  input: "^model/gradients/model/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/gradients/model/add_grad/tuple/control_dependency"
  input: "ctc_loss_1/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 744
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/Reshape_2"
  input: "model/gradients/model/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/MatMul_grad/MatMul"
  input: "^model/gradients/model/MatMul_grad/MatMul_1"
}
node {
  name: "model/gradients/model/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/MatMul_grad/MatMul"
  input: "^model/gradients/model/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 744
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/MatMul_grad/MatMul_1"
  input: "^model/gradients/model/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "W\000\000\000\002\000\000\000\006\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/transpose_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/Reshape_2_grad/Reshape"
  input: "model/gradients/model/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 87
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/transpose_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/transpose_grad/transpose"
  input: "model/gradients/model/lstm2d_2/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 87
          }
          dim {
            size: 6
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_1_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/lstm2d_2/transpose_grad/transpose"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 2
          }
          dim {
            size: 87
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\006\000\000\000\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_1_grad/transpose"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/mod"
  op: "FloorMod"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat/axis"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\006\000\000\000\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\006\000\000\000\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/mod"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1_grad/ReverseV2"
  op: "ReverseV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency_1"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1_grad/ReverseV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_2"
  op: "Fill"
  input: "model/gradients/zeros_2/shape_as_tensor"
  input: "model/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/gradients/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/zeros_3/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_3"
  op: "Fill"
  input: "model/gradients/zeros_3/shape_as_tensor"
  input: "model/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/gradients/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  input: "model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  input: "model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  input: "model/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  input: "model/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "^model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "^model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "^model/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "^model/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_1"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "model/gradients/AddN_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  input: "^model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/AddN_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "^model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_2"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "model/gradients/AddN_2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  input: "^model/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/AddN_2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "^model/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_3"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/AddN_3"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/AddN_3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/AddN_3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  input: "^model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "^model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  input: "^model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "^model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_4"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/AddN_4"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/AddN_4"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/AddN_4"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  input: "^model/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "^model/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  input: "^model/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "^model/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 186
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "^model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 186
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 186
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 186
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 248
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 186
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "^model/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 186
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 186
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 186
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 248
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\256\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_5"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_6"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_7"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_grad/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 174
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\002\000\000\000W\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/AddN_7"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 2
          }
          dim {
            size: 87
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/Reshape_grad/Reshape"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 87
          }
          dim {
            size: 6
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_2/vertical_pass/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/vertical_pass/transpose_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/transpose_grad/transpose"
  input: "model/gradients/model/lstm2d_2/vertical_pass/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 87
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_1_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/lstm2d_2/vertical_pass/transpose_grad/transpose"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "W\000\000\000\014\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_1_grad/transpose"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/mod"
  op: "FloorMod"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat/axis"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "W\000\000\000\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "W\000\000\000\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/mod"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1_grad/ReverseV2"
  op: "ReverseV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency_1"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1_grad/ReverseV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_4"
  op: "Fill"
  input: "model/gradients/zeros_4/shape_as_tensor"
  input: "model/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/gradients/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/zeros_5/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_5"
  op: "Fill"
  input: "model/gradients/zeros_5/shape_as_tensor"
  input: "model/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/gradients/zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  input: "model/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  input: "model/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  input: "model/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  input: "model/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "^model/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "^model/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "^model/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000|\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "^model/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_8"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "model/gradients/AddN_8"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  input: "^model/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/AddN_8"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "^model/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_9"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "model/gradients/AddN_9"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  input: "^model/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/AddN_9"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "^model/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_10"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/AddN_10"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/AddN_10"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/AddN_10"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  input: "^model/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "^model/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  input: "^model/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "^model/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_11"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/AddN_11"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/AddN_11"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/AddN_11"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  input: "^model/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "^model/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  input: "^model/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "^model/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 126
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "^model/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 126
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 126
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 126
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 248
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 126
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "^model/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 126
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 126
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 126
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 248
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000>\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 62
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_12"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/Sub_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_13"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_14"
  op: "AddN"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_grad/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 12
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "W\000\000\000\002\000\000\000\006\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/AddN_14"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/Reshape_grad/Reshape"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 6
          }
          dim {
            size: 87
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/pool2/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "model/conv2/Relu"
  input: "model/pool2/MaxPool"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "model/gradients/model/pool2/MaxPool_grad/MaxPoolGrad"
  input: "model/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/gradients/model/conv2/Relu_grad/ReluGrad"
  input: "model/conv2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/conv2/BatchNorm/cond_1/Merge_grad/cond_grad"
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond_1/Merge_grad/cond_grad"
  input: "^model/gradients/model/conv2/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond_1/Merge_grad/cond_grad:1"
  input: "^model/gradients/model/conv2/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_18"
  op: "Switch"
  input: "model/conv2/BatchNorm/cond/Merge"
  input: "model/conv2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_3"
  op: "Shape"
  input: "model/gradients/Switch_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_6"
  op: "Fill"
  input: "model/gradients/Shape_3"
  input: "model/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/model/conv2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  input: "model/gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_19"
  op: "Switch"
  input: "model/conv2/BatchNorm/cond/Merge"
  input: "model/conv2/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_4"
  op: "Shape"
  input: "model/gradients/Switch_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_7"
  op: "Fill"
  input: "model/gradients/Shape_4"
  input: "model/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/zeros_7"
  input: "model/gradients/model/conv2/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_15"
  op: "AddN"
  input: "model/gradients/model/conv2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  input: "model/gradients/model/conv2/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/gradients/AddN_15"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/conv2/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^model/gradients/model/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^model/gradients/model/conv2/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "model/gradients/model/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "model/gradients/model/conv2/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm:3"
  input: "model/conv2/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_20"
  op: "Switch"
  input: "model/conv2/Conv2D"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_5"
  op: "Shape"
  input: "model/gradients/Switch_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_8"
  op: "Fill"
  input: "model/gradients/Shape_5"
  input: "model/gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "model/gradients/zeros_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_21"
  op: "Switch"
  input: "conv2/BatchNorm/beta/read"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_6"
  op: "Shape"
  input: "model/gradients/Switch_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_9"
  op: "Fill"
  input: "model/gradients/Shape_6"
  input: "model/gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "model/gradients/zeros_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_22"
  op: "Switch"
  input: "model/conv2/Conv2D"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_7"
  op: "Shape"
  input: "model/gradients/Switch_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_10/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_10"
  op: "Fill"
  input: "model/gradients/Shape_7"
  input: "model/gradients/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/zeros_10"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_23"
  op: "Switch"
  input: "conv2/BatchNorm/beta/read"
  input: "model/conv2/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_8"
  op: "Shape"
  input: "model/gradients/Switch_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_11/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_11"
  op: "Fill"
  input: "model/gradients/Shape_8"
  input: "model/gradients/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/zeros_11"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_16"
  op: "AddN"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "model/lstm2d_1/transpose"
  input: "conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv2/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\014\000\000\000\257\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "model/gradients/model/conv2/Conv2D_grad/Const"
  input: "conv2/weights/read"
  input: "model/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "model/lstm2d_1/transpose"
  input: "model/gradients/model/conv2/Conv2D_grad/Const_1"
  input: "model/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^model/gradients/model/conv2/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "model/gradients/model/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^model/gradients/model/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^model/gradients/model/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_17"
  op: "AddN"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv2/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/transpose_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/conv2/Conv2D_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 175
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_1_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/lstm2d_1/transpose_grad/transpose"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 2
          }
          dim {
            size: 175
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_1_grad/transpose"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/mod"
  op: "FloorMod"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat/axis"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/mod"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1_grad/ReverseV2"
  op: "ReverseV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency_1"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1_grad/ReverseV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_12/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/zeros_12/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_12"
  op: "Fill"
  input: "model/gradients/zeros_12/shape_as_tensor"
  input: "model/gradients/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/gradients/zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/zeros_13/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/zeros_13/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_13"
  op: "Fill"
  input: "model/gradients/zeros_13/shape_as_tensor"
  input: "model/gradients/zeros_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/gradients/zeros_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  input: "model/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  input: "model/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  input: "model/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  input: "model/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "^model/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "^model/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "^model/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "^model/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_18"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "model/gradients/AddN_18"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  input: "^model/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/AddN_18"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "^model/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_19"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "model/gradients/AddN_19"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  input: "^model/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/AddN_19"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "^model/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_20"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/AddN_20"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/AddN_20"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/AddN_20"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  input: "^model/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "^model/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  input: "^model/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "^model/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_21"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/AddN_21"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/AddN_21"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/AddN_21"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  input: "^model/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "^model/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  input: "^model/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "^model/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "^model/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "^model/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/Sub_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "^\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_22"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/Sub_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_23"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_24"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_grad/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 350
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\014\000\000\000\002\000\000\000\257\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/AddN_24"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 2
          }
          dim {
            size: 175
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/Reshape_grad/Reshape"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 175
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_1/vertical_pass/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/vertical_pass/transpose_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/transpose_grad/transpose"
  input: "model/gradients/model/lstm2d_1/vertical_pass/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_1_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/lstm2d_1/vertical_pass/transpose_grad/transpose"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\257\000\000\000\030\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_1_grad/transpose"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/mod"
  op: "FloorMod"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat/axis"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\257\000\000\000\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\257\000\000\000\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/mod"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_1_grad/Reshape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1_grad/ReverseV2"
  op: "ReverseV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/concat_grad/tuple/control_dependency_1"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/range"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_1_grad/ReverseV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_14/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/zeros_14/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_14"
  op: "Fill"
  input: "model/gradients/zeros_14/shape_as_tensor"
  input: "model/gradients/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/gradients/zeros_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/zeros_15/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/zeros_15/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_15"
  op: "Fill"
  input: "model/gradients/zeros_15/shape_as_tensor"
  input: "model/gradients/zeros_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/gradients/zeros_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  input: "model/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  input: "model/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_2_grad/b_exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Exit_3_grad/b_exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
  input: "model/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
  input: "model/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/Switch:1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Identity_1"
  input: "^model/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "^model/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Identity_1"
  input: "^model/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/GreaterEqual"
  input: "^model/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/zeros_like"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_25"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "model/gradients/AddN_25"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  input: "^model/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/AddN_25"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "^model/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  op: "Fill"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/shape_as_tensor"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/zeros_like"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Const"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/mod"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_26"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "model/gradients/AddN_26"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2"
  input: "^model/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/AddN_26"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1"
  input: "^model/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_27"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/AddN_27"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/AddN_27"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/AddN_27"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  input: "^model/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "^model/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  input: "^model/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "^model/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_28"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/AddN_28"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/AddN_28"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/AddN_28"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid"
  input: "^model/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split"
  input: "^model/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh"
  input: "^model/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "^model/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "^model/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat"
  input: "^model/gradients/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/Sub_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Const"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/mod"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_29"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/Sub_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/gradients/b_count_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_30"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/gradients"
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/range"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_31"
  op: "AddN"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/ReverseV2_grad/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 24
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\257\000\000\000\002\000\000\000\014\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/gradients/AddN_31"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 175
          }
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_grad/transpose"
  op: "Transpose"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/Reshape_grad/Reshape"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 12
          }
          dim {
            size: 175
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/pool1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "model/conv1/Relu"
  input: "model/pool1/MaxPool"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "model/gradients/model/pool1/MaxPool_grad/MaxPoolGrad"
  input: "model/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond_1/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/gradients/model/conv1/Relu_grad/ReluGrad"
  input: "model/conv1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/conv1/BatchNorm/cond_1/Merge_grad/cond_grad"
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond_1/Merge_grad/cond_grad"
  input: "^model/gradients/model/conv1/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond_1/Merge_grad/cond_grad:1"
  input: "^model/gradients/model/conv1/BatchNorm/cond_1/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_24"
  op: "Switch"
  input: "model/conv1/BatchNorm/cond/Merge"
  input: "model/conv1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_9"
  op: "Shape"
  input: "model/gradients/Switch_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_16/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_16"
  op: "Fill"
  input: "model/gradients/Shape_9"
  input: "model/gradients/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/model/conv1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency"
  input: "model/gradients/zeros_16"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_25"
  op: "Switch"
  input: "model/conv1/BatchNorm/cond/Merge"
  input: "model/conv1/BatchNorm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_10"
  op: "Shape"
  input: "model/gradients/Switch_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_17/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_17"
  op: "Fill"
  input: "model/gradients/Shape_10"
  input: "model/gradients/zeros_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/zeros_17"
  input: "model/gradients/model/conv1/BatchNorm/cond_1/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_32"
  op: "AddN"
  input: "model/gradients/model/conv1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
  input: "model/gradients/model/conv1/BatchNorm/cond_1/Identity/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/gradients/AddN_32"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/conv1/BatchNorm/cond/Merge_grad/cond_grad"
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond/Merge_grad/cond_grad"
  input: "^model/gradients/model/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond/Merge_grad/cond_grad:1"
  input: "^model/gradients/model/conv1/BatchNorm/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond_1/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "model/gradients/model/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_1"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_3"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "model/gradients/model/conv1/BatchNorm/cond/Merge_grad/tuple/control_dependency_1"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm/Switch:1"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm/Switch_1:1"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm:3"
  input: "model/conv1/BatchNorm/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_26"
  op: "Switch"
  input: "model/conv1/Conv2D"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_11"
  op: "Shape"
  input: "model/gradients/Switch_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_18/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_18"
  op: "Fill"
  input: "model/gradients/Shape_11"
  input: "model/gradients/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "model/gradients/zeros_18"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_27"
  op: "Switch"
  input: "conv1/BatchNorm/beta/read"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_12"
  op: "Shape"
  input: "model/gradients/Switch_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_19/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_19"
  op: "Fill"
  input: "model/gradients/Shape_12"
  input: "model/gradients/zeros_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "model/gradients/zeros_19"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_28"
  op: "Switch"
  input: "model/conv1/Conv2D"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_13"
  op: "Shape"
  input: "model/gradients/Switch_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_20/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_20"
  op: "Fill"
  input: "model/gradients/Shape_13"
  input: "model/gradients/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/zeros_20"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/Switch_29"
  op: "Switch"
  input: "conv1/BatchNorm/beta/read"
  input: "model/conv1/BatchNorm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/Shape_14"
  op: "Shape"
  input: "model/gradients/Switch_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/zeros_21/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/gradients/zeros_21"
  op: "Fill"
  input: "model/gradients/Shape_14"
  input: "model/gradients/zeros_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "model/gradients/zeros_21"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_33"
  op: "AddN"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "model/Reshape_1"
  input: "conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/gradients/model/conv1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\031\000\000\000^\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/Conv2D_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "model/gradients/model/conv1/Conv2D_grad/Const"
  input: "conv1/weights/read"
  input: "model/gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "model/Reshape_1"
  input: "model/gradients/model/conv1/Conv2D_grad/Const_1"
  input: "model/gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/gradients/model/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/gradients/model/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^model/gradients/model/conv1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "model/gradients/model/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/gradients/model/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^model/gradients/model/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 25
          }
          dim {
            size: 350
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/model/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/gradients/model/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^model/gradients/model/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/gradients/AddN_34"
  op: "AddN"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/gradients/model/conv1/BatchNorm/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm/mul"
  op: "Mul"
  input: "model/gradients/model/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "model/gradients/model/conv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm/mul"
  input: "model/clip_grads/clip_by_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm/mul_1"
  op: "Mul"
  input: "model/gradients/model/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "model/clip_grads/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm/Sqrt"
  input: "model/clip_grads/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm/mul_1"
  input: "model/clip_grads/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_1/mul"
  op: "Mul"
  input: "model/gradients/AddN_34"
  input: "model/gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_1/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_1/mul"
  input: "model/clip_grads/clip_by_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_1/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_1/mul_1"
  op: "Mul"
  input: "model/gradients/AddN_34"
  input: "model/clip_grads/clip_by_norm_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_1/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_1/Sqrt"
  input: "model/clip_grads/clip_by_norm_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_1/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_1/mul_1"
  input: "model/clip_grads/clip_by_norm_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_1"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_2/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_2/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_2/mul"
  input: "model/clip_grads/clip_by_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_2/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_2/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_2/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_2/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_2/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_2/Sqrt"
  input: "model/clip_grads/clip_by_norm_2/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_2/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_2/mul_1"
  input: "model/clip_grads/clip_by_norm_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_2"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_2/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_3/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_3/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_3/mul"
  input: "model/clip_grads/clip_by_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_3/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_3/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_3/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_3/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_3/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_3/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_3/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_3/Sqrt"
  input: "model/clip_grads/clip_by_norm_3/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_3/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_3/mul_1"
  input: "model/clip_grads/clip_by_norm_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_3"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_3/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_4/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_4/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_4/mul"
  input: "model/clip_grads/clip_by_norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_4/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_4/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_4/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_4/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_4/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_4/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_4/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_4/Sqrt"
  input: "model/clip_grads/clip_by_norm_4/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_4/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_4/mul_1"
  input: "model/clip_grads/clip_by_norm_4/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_4"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_4/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_5/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_5/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_5/mul"
  input: "model/clip_grads/clip_by_norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_5/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_5/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_5/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_5/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_5/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_5/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_5/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_5/Sqrt"
  input: "model/clip_grads/clip_by_norm_5/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_5/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_5/mul_1"
  input: "model/clip_grads/clip_by_norm_5/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_5"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_5/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_6/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_6/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_6/mul"
  input: "model/clip_grads/clip_by_norm_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_6/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_6/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_6/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_6/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_6/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_6/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_6/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_6/Sqrt"
  input: "model/clip_grads/clip_by_norm_6/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_6/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_6/mul_1"
  input: "model/clip_grads/clip_by_norm_6/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_6"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_6/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_7/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_7/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_7/mul"
  input: "model/clip_grads/clip_by_norm_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_7/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_7/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_7/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_7/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_7/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_7/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_7/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_7/Sqrt"
  input: "model/clip_grads/clip_by_norm_7/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_7/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_7/mul_1"
  input: "model/clip_grads/clip_by_norm_7/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_7"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_7/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_8/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_8/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_8/mul"
  input: "model/clip_grads/clip_by_norm_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_8/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_8/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_8/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_8/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_8/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_8/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_8/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_8/Sqrt"
  input: "model/clip_grads/clip_by_norm_8/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_8/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_8/mul_1"
  input: "model/clip_grads/clip_by_norm_8/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_8"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_8/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_9/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_9/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_9/mul"
  input: "model/clip_grads/clip_by_norm_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_9/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_9/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_9/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_9/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_9/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_9/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_9/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_9/Sqrt"
  input: "model/clip_grads/clip_by_norm_9/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_9/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_9/mul_1"
  input: "model/clip_grads/clip_by_norm_9/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_9"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_9/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_10/mul"
  op: "Mul"
  input: "model/gradients/model/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "model/gradients/model/conv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_10/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_10/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_10/mul"
  input: "model/clip_grads/clip_by_norm_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_10/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_10/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_10/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_10/mul_1"
  op: "Mul"
  input: "model/gradients/model/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "model/clip_grads/clip_by_norm_10/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_10/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_10/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_10/Sqrt"
  input: "model/clip_grads/clip_by_norm_10/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_10/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_10/mul_1"
  input: "model/clip_grads/clip_by_norm_10/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_10"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_10/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_11/mul"
  op: "Mul"
  input: "model/gradients/AddN_17"
  input: "model/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_11/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_11/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_11/mul"
  input: "model/clip_grads/clip_by_norm_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_11/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_11/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_11/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_11/mul_1"
  op: "Mul"
  input: "model/gradients/AddN_17"
  input: "model/clip_grads/clip_by_norm_11/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_11/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_11/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_11/Sqrt"
  input: "model/clip_grads/clip_by_norm_11/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_11/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_11/mul_1"
  input: "model/clip_grads/clip_by_norm_11/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_11"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_11/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_12/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_12/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_12/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_12/mul"
  input: "model/clip_grads/clip_by_norm_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_12/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_12/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_12/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_12/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_12/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_12/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_12/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_12/Sqrt"
  input: "model/clip_grads/clip_by_norm_12/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_12/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_12/mul_1"
  input: "model/clip_grads/clip_by_norm_12/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_12"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_12/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_13/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_13/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_13/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_13/mul"
  input: "model/clip_grads/clip_by_norm_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_13/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_13/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_13/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_13/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_13/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_13/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_13/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_13/Sqrt"
  input: "model/clip_grads/clip_by_norm_13/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_13/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_13/mul_1"
  input: "model/clip_grads/clip_by_norm_13/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_13"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_13/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_14/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_14/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_14/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_14/mul"
  input: "model/clip_grads/clip_by_norm_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_14/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_14/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_14/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_14/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_14/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_14/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_14/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_14/Sqrt"
  input: "model/clip_grads/clip_by_norm_14/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_14/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_14/mul_1"
  input: "model/clip_grads/clip_by_norm_14/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_14"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_14/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_15/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_15/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_15/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_15/mul"
  input: "model/clip_grads/clip_by_norm_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_15/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_15/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_15/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_15/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_15/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_15/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_15/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_15/Sqrt"
  input: "model/clip_grads/clip_by_norm_15/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_15/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_15/mul_1"
  input: "model/clip_grads/clip_by_norm_15/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_15"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_15/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_16/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_16/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_16/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_16/mul"
  input: "model/clip_grads/clip_by_norm_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_16/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_16/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_16/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_16/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_16/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_16/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_16/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_16/Sqrt"
  input: "model/clip_grads/clip_by_norm_16/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_16/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_16/mul_1"
  input: "model/clip_grads/clip_by_norm_16/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_16"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_16/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_17/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_17/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_17/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_17/mul"
  input: "model/clip_grads/clip_by_norm_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_17/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_17/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_17/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_17/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_17/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_17/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_17/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_17/Sqrt"
  input: "model/clip_grads/clip_by_norm_17/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_17/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_17/mul_1"
  input: "model/clip_grads/clip_by_norm_17/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_17"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_17/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_18/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_18/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_18/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_18/mul"
  input: "model/clip_grads/clip_by_norm_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_18/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_18/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_18/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_18/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_18/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_18/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_18/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_18/Sqrt"
  input: "model/clip_grads/clip_by_norm_18/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_18/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_18/mul_1"
  input: "model/clip_grads/clip_by_norm_18/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_18"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_18/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_19/mul"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_19/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_19/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_19/mul"
  input: "model/clip_grads/clip_by_norm_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_19/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_19/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_19/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_19/mul_1"
  op: "Mul"
  input: "model/gradients/model/lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/clip_grads/clip_by_norm_19/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_19/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_19/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_19/Sqrt"
  input: "model/clip_grads/clip_by_norm_19/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_19/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_19/mul_1"
  input: "model/clip_grads/clip_by_norm_19/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_19"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_19/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_20/mul"
  op: "Mul"
  input: "model/gradients/model/MatMul_grad/tuple/control_dependency_1"
  input: "model/gradients/model/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_20/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_20/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_20/mul"
  input: "model/clip_grads/clip_by_norm_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_20/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_20/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_20/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_20/mul_1"
  op: "Mul"
  input: "model/gradients/model/MatMul_grad/tuple/control_dependency_1"
  input: "model/clip_grads/clip_by_norm_20/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_20/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_20/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_20/Sqrt"
  input: "model/clip_grads/clip_by_norm_20/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_20/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_20/mul_1"
  input: "model/clip_grads/clip_by_norm_20/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_20"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_20/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_21/mul"
  op: "Mul"
  input: "model/gradients/model/add_grad/tuple/control_dependency_1"
  input: "model/gradients/model/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_21/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_21/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_21/mul"
  input: "model/clip_grads/clip_by_norm_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_21/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_21/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_21/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_21/mul_1"
  op: "Mul"
  input: "model/gradients/model/add_grad/tuple/control_dependency_1"
  input: "model/clip_grads/clip_by_norm_21/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_21/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_21/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_21/Sqrt"
  input: "model/clip_grads/clip_by_norm_21/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_21/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_21/mul_1"
  input: "model/clip_grads/clip_by_norm_21/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_21"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_21/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_22/mul"
  op: "Mul"
  input: "model/gradients/model/MatMul_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_22/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_22/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_22/mul"
  input: "model/clip_grads/clip_by_norm_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_22/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_22/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_22/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_22/mul_1"
  op: "Mul"
  input: "model/gradients/model/MatMul_1_grad/tuple/control_dependency_1"
  input: "model/clip_grads/clip_by_norm_22/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_22/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_22/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_22/Sqrt"
  input: "model/clip_grads/clip_by_norm_22/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_22/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_22/mul_1"
  input: "model/clip_grads/clip_by_norm_22/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_22"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_22/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_23/mul"
  op: "Mul"
  input: "model/gradients/model/add_1_grad/tuple/control_dependency_1"
  input: "model/gradients/model/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_23/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_23/Sum"
  op: "Sum"
  input: "model/clip_grads/clip_by_norm_23/mul"
  input: "model/clip_grads/clip_by_norm_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_23/Sqrt"
  op: "Sqrt"
  input: "model/clip_grads/clip_by_norm_23/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_23/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_23/mul_1"
  op: "Mul"
  input: "model/gradients/model/add_1_grad/tuple/control_dependency_1"
  input: "model/clip_grads/clip_by_norm_23/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_23/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_23/Maximum"
  op: "Maximum"
  input: "model/clip_grads/clip_by_norm_23/Sqrt"
  input: "model/clip_grads/clip_by_norm_23/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_23/truediv"
  op: "RealDiv"
  input: "model/clip_grads/clip_by_norm_23/mul_1"
  input: "model/clip_grads/clip_by_norm_23/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/clip_grads/clip_by_norm_23"
  op: "Identity"
  input: "model/clip_grads/clip_by_norm_23/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "model/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/beta1_power/Assign"
  op: "Assign"
  input: "model/beta1_power"
  input: "model/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/beta1_power/read"
  op: "Identity"
  input: "model/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "model/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/beta2_power/Assign"
  op: "Assign"
  input: "model/beta2_power"
  input: "model/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/beta2_power/read"
  op: "Identity"
  input: "model/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Adam/Assign"
  op: "Assign"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/Adam/read"
  op: "Identity"
  input: "conv1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv1/weights/Adam_1"
  input: "conv1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/Adam_1/read"
  op: "Identity"
  input: "conv1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "conv1/BatchNorm/beta/Adam"
  input: "conv1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "conv1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "conv1/BatchNorm/beta/Adam_1"
  input: "conv1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "conv1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv2/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Adam/Assign"
  op: "Assign"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/Adam/read"
  op: "Identity"
  input: "conv2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv2/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv2/weights/Adam_1"
  input: "conv2/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/Adam_1/read"
  op: "Identity"
  input: "conv2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv2/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv2/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "conv2/BatchNorm/beta/Adam"
  input: "conv2/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "conv2/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv2/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv2/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "conv2/BatchNorm/beta/Adam_1"
  input: "conv2/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "conv2/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "~\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "~\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "~\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "~\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 126
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\272\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 186
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\272\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 186
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\272\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 186
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\272\000\000\000\370\000\000\000"
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 186
        }
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 248
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 248
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\002\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam/Initializer/zeros"
  op: "Fill"
  input: "ctc_loss_1/w/Adam/Initializer/zeros/shape_as_tensor"
  input: "ctc_loss_1/w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 744
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam/Assign"
  op: "Assign"
  input: "ctc_loss_1/w/Adam"
  input: "ctc_loss_1/w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam/read"
  op: "Identity"
  input: "ctc_loss_1/w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\002\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ctc_loss_1/w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ctc_loss_1/w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 744
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam_1/Assign"
  op: "Assign"
  input: "ctc_loss_1/w/Adam_1"
  input: "ctc_loss_1/w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/w/Adam_1/read"
  op: "Identity"
  input: "ctc_loss_1/w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam/Initializer/zeros"
  op: "Fill"
  input: "ctc_loss_1/b/Adam/Initializer/zeros/shape_as_tensor"
  input: "ctc_loss_1/b/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam/Assign"
  op: "Assign"
  input: "ctc_loss_1/b/Adam"
  input: "ctc_loss_1/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam/read"
  op: "Identity"
  input: "ctc_loss_1/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ctc_loss_1/b/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ctc_loss_1/b/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam_1/Assign"
  op: "Assign"
  input: "ctc_loss_1/b/Adam_1"
  input: "ctc_loss_1/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/b/Adam_1/read"
  op: "Identity"
  input: "ctc_loss_1/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam/Initializer/zeros"
  op: "Fill"
  input: "ctc_loss_1/w1/Adam/Initializer/zeros/shape_as_tensor"
  input: "ctc_loss_1/w1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam/Assign"
  op: "Assign"
  input: "ctc_loss_1/w1/Adam"
  input: "ctc_loss_1/w1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam/read"
  op: "Identity"
  input: "ctc_loss_1/w1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ctc_loss_1/w1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ctc_loss_1/w1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam_1/Assign"
  op: "Assign"
  input: "ctc_loss_1/w1/Adam_1"
  input: "ctc_loss_1/w1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/w1/Adam_1/read"
  op: "Identity"
  input: "ctc_loss_1/w1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam/Initializer/zeros"
  op: "Fill"
  input: "ctc_loss_1/b1/Adam/Initializer/zeros/shape_as_tensor"
  input: "ctc_loss_1/b1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam/Assign"
  op: "Assign"
  input: "ctc_loss_1/b1/Adam"
  input: "ctc_loss_1/b1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam/read"
  op: "Identity"
  input: "ctc_loss_1/b1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ctc_loss_1/b1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ctc_loss_1/b1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam_1/Assign"
  op: "Assign"
  input: "ctc_loss_1/b1/Adam_1"
  input: "ctc_loss_1/b1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ctc_loss_1/b1/Adam_1/read"
  op: "Identity"
  input: "ctc_loss_1/b1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "model/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "model/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "model/Adam/update_conv1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/weights"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_conv1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/BatchNorm/beta"
  input: "conv1/BatchNorm/beta/Adam"
  input: "conv1/BatchNorm/beta/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_conv2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/weights"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_conv2/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/BatchNorm/beta"
  input: "conv2/BatchNorm/beta/Adam"
  input: "conv2/BatchNorm/beta/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_ctc_loss_1/w/ApplyAdam"
  op: "ApplyAdam"
  input: "ctc_loss_1/w"
  input: "ctc_loss_1/w/Adam"
  input: "ctc_loss_1/w/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_ctc_loss_1/b/ApplyAdam"
  op: "ApplyAdam"
  input: "ctc_loss_1/b"
  input: "ctc_loss_1/b/Adam"
  input: "ctc_loss_1/b/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_ctc_loss_1/w1/ApplyAdam"
  op: "ApplyAdam"
  input: "ctc_loss_1/w1"
  input: "ctc_loss_1/w1/Adam"
  input: "ctc_loss_1/w1/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/update_ctc_loss_1/b1/ApplyAdam"
  op: "ApplyAdam"
  input: "ctc_loss_1/b1"
  input: "ctc_loss_1/b1/Adam"
  input: "ctc_loss_1/b1/Adam_1"
  input: "model/beta1_power/read"
  input: "model/beta2_power/read"
  input: "ExponentialDecay"
  input: "model/Adam/beta1"
  input: "model/Adam/beta2"
  input: "model/Adam/epsilon"
  input: "model/clip_grads/clip_by_norm_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/Adam/mul"
  op: "Mul"
  input: "model/beta1_power/read"
  input: "model/Adam/beta1"
  input: "^model/Adam/update_conv1/weights/ApplyAdam"
  input: "^model/Adam/update_conv1/BatchNorm/beta/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_conv2/weights/ApplyAdam"
  input: "^model/Adam/update_conv2/BatchNorm/beta/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/w/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/b/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/w1/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/b1/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/Adam/Assign"
  op: "Assign"
  input: "model/beta1_power"
  input: "model/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/Adam/mul_1"
  op: "Mul"
  input: "model/beta2_power/read"
  input: "model/Adam/beta2"
  input: "^model/Adam/update_conv1/weights/ApplyAdam"
  input: "^model/Adam/update_conv1/BatchNorm/beta/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_conv2/weights/ApplyAdam"
  input: "^model/Adam/update_conv2/BatchNorm/beta/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/w/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/b/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/w1/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/b1/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/Adam/Assign_1"
  op: "Assign"
  input: "model/beta2_power"
  input: "model/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/Adam/update"
  op: "NoOp"
  input: "^model/Adam/update_conv1/weights/ApplyAdam"
  input: "^model/Adam/update_conv1/BatchNorm/beta/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_conv2/weights/ApplyAdam"
  input: "^model/Adam/update_conv2/BatchNorm/beta/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/ApplyAdam"
  input: "^model/Adam/update_lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/w/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/b/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/w1/ApplyAdam"
  input: "^model/Adam/update_ctc_loss_1/b1/ApplyAdam"
  input: "^model/Adam/Assign"
  input: "^model/Adam/Assign_1"
}
node {
  name: "model/Adam/value"
  op: "Const"
  input: "^model/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "model/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/train_op/CheckNumerics"
  op: "CheckNumerics"
  input: "model/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "LossTensor is inf or nan"
    }
  }
}
node {
  name: "model/train_op/control_dependency"
  op: "Identity"
  input: "model/train_op/CheckNumerics"
  input: "^model/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/train_op/CheckNumerics"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "W\000\000\000\002\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "model/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "W\000\000\000\002\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "model/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/Sub"
  op: "Sub"
  input: "model/Rank"
  input: "model/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/Slice/begin"
  op: "Pack"
  input: "model/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/Slice"
  op: "Slice"
  input: "model/Shape_1"
  input: "model/Slice/begin"
  input: "model/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/concat"
  op: "ConcatV2"
  input: "model/concat/values_0"
  input: "model/Slice"
  input: "model/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/Reshape_4"
  op: "Reshape"
  input: "model/Reshape_3"
  input: "model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/Softmax"
  op: "Softmax"
  input: "model/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 174
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/Reshape_5"
  op: "Reshape"
  input: "model/Softmax"
  input: "model/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 87
          }
          dim {
            size: 2
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "model/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "model/SparseToDense"
  op: "SparseToDense"
  input: "model/Prediction/CTCBeamSearchDecoder"
  input: "model/Prediction/CTCBeamSearchDecoder:4"
  input: "model/Prediction/CTCBeamSearchDecoder:2"
  input: "model/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "model/SparseToDense_1/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "model/SparseToDense_1"
  op: "SparseToDense"
  input: "model/Prediction/CTCBeamSearchDecoder:1"
  input: "model/Prediction/CTCBeamSearchDecoder:5"
  input: "model/Prediction/CTCBeamSearchDecoder:3"
  input: "model/SparseToDense_1/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "model/SparseToDense_2/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/SparseToDense_2"
  op: "SparseToDense"
  input: "cond/Merge_2/indices"
  input: "cond/Merge_2/dense_shape"
  input: "Cast_1"
  input: "model/SparseToDense_2/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 79
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 79
          }
        }
        string_val: "conv1/BatchNorm/beta"
        string_val: "conv1/BatchNorm/beta/Adam"
        string_val: "conv1/BatchNorm/beta/Adam_1"
        string_val: "conv1/BatchNorm/moving_mean"
        string_val: "conv1/BatchNorm/moving_variance"
        string_val: "conv1/weights"
        string_val: "conv1/weights/Adam"
        string_val: "conv1/weights/Adam_1"
        string_val: "conv2/BatchNorm/beta"
        string_val: "conv2/BatchNorm/beta/Adam"
        string_val: "conv2/BatchNorm/beta/Adam_1"
        string_val: "conv2/BatchNorm/moving_mean"
        string_val: "conv2/BatchNorm/moving_variance"
        string_val: "conv2/weights"
        string_val: "conv2/weights/Adam"
        string_val: "conv2/weights/Adam_1"
        string_val: "ctc_loss_1/b"
        string_val: "ctc_loss_1/b/Adam"
        string_val: "ctc_loss_1/b/Adam_1"
        string_val: "ctc_loss_1/b1"
        string_val: "ctc_loss_1/b1/Adam"
        string_val: "ctc_loss_1/b1/Adam_1"
        string_val: "ctc_loss_1/w"
        string_val: "ctc_loss_1/w/Adam"
        string_val: "ctc_loss_1/w/Adam_1"
        string_val: "ctc_loss_1/w1"
        string_val: "ctc_loss_1/w1/Adam"
        string_val: "ctc_loss_1/w1/Adam_1"
        string_val: "global_step"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "model/beta1_power"
        string_val: "model/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 79
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 79
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "conv1/BatchNorm/beta"
  input: "conv1/BatchNorm/beta/Adam"
  input: "conv1/BatchNorm/beta/Adam_1"
  input: "conv1/BatchNorm/moving_mean"
  input: "conv1/BatchNorm/moving_variance"
  input: "conv1/weights"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam_1"
  input: "conv2/BatchNorm/beta"
  input: "conv2/BatchNorm/beta/Adam"
  input: "conv2/BatchNorm/beta/Adam_1"
  input: "conv2/BatchNorm/moving_mean"
  input: "conv2/BatchNorm/moving_variance"
  input: "conv2/weights"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam_1"
  input: "ctc_loss_1/b"
  input: "ctc_loss_1/b/Adam"
  input: "ctc_loss_1/b/Adam_1"
  input: "ctc_loss_1/b1"
  input: "ctc_loss_1/b1/Adam"
  input: "ctc_loss_1/b1/Adam_1"
  input: "ctc_loss_1/w"
  input: "ctc_loss_1/w/Adam"
  input: "ctc_loss_1/w/Adam_1"
  input: "ctc_loss_1/w1"
  input: "ctc_loss_1/w1/Adam"
  input: "ctc_loss_1/w1/Adam_1"
  input: "global_step"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "model/beta1_power"
  input: "model/beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 79
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 79
          }
        }
        string_val: "conv1/BatchNorm/beta"
        string_val: "conv1/BatchNorm/beta/Adam"
        string_val: "conv1/BatchNorm/beta/Adam_1"
        string_val: "conv1/BatchNorm/moving_mean"
        string_val: "conv1/BatchNorm/moving_variance"
        string_val: "conv1/weights"
        string_val: "conv1/weights/Adam"
        string_val: "conv1/weights/Adam_1"
        string_val: "conv2/BatchNorm/beta"
        string_val: "conv2/BatchNorm/beta/Adam"
        string_val: "conv2/BatchNorm/beta/Adam_1"
        string_val: "conv2/BatchNorm/moving_mean"
        string_val: "conv2/BatchNorm/moving_variance"
        string_val: "conv2/weights"
        string_val: "conv2/weights/Adam"
        string_val: "conv2/weights/Adam_1"
        string_val: "ctc_loss_1/b"
        string_val: "ctc_loss_1/b/Adam"
        string_val: "ctc_loss_1/b/Adam_1"
        string_val: "ctc_loss_1/b1"
        string_val: "ctc_loss_1/b1/Adam"
        string_val: "ctc_loss_1/b1/Adam_1"
        string_val: "ctc_loss_1/w"
        string_val: "ctc_loss_1/w/Adam"
        string_val: "ctc_loss_1/w/Adam_1"
        string_val: "ctc_loss_1/w1"
        string_val: "ctc_loss_1/w1/Adam"
        string_val: "ctc_loss_1/w1/Adam_1"
        string_val: "global_step"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "model/beta1_power"
        string_val: "model/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 79
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 79
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "conv1/BatchNorm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "conv1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "conv1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "conv1/weights"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "conv1/weights/Adam"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "conv1/weights/Adam_1"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "conv2/BatchNorm/beta"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "conv2/BatchNorm/beta/Adam"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "conv2/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "conv2/weights"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "conv2/weights/Adam"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "conv2/weights/Adam_1"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "ctc_loss_1/b"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "ctc_loss_1/b/Adam"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "ctc_loss_1/b/Adam_1"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "ctc_loss_1/b1"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "ctc_loss_1/b1/Adam"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "ctc_loss_1/b1/Adam_1"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "ctc_loss_1/w"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "ctc_loss_1/w/Adam"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "ctc_loss_1/w/Adam_1"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 744
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "ctc_loss_1/w1"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "ctc_loss_1/w1/Adam"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "ctc_loss_1/w1/Adam_1"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 126
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
          dim {
            size: 248
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "model/beta1_power"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "model/beta2_power"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^conv1/weights/Assign"
  input: "^conv1/BatchNorm/beta/Assign"
  input: "^conv1/BatchNorm/moving_mean/Assign"
  input: "^conv1/BatchNorm/moving_variance/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^conv2/weights/Assign"
  input: "^conv2/BatchNorm/beta/Assign"
  input: "^conv2/BatchNorm/moving_mean/Assign"
  input: "^conv2/BatchNorm/moving_variance/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^ctc_loss_1/w/Assign"
  input: "^ctc_loss_1/b/Assign"
  input: "^ctc_loss_1/w1/Assign"
  input: "^ctc_loss_1/b1/Assign"
  input: "^model/beta1_power/Assign"
  input: "^model/beta2_power/Assign"
  input: "^conv1/weights/Adam/Assign"
  input: "^conv1/weights/Adam_1/Assign"
  input: "^conv1/BatchNorm/beta/Adam/Assign"
  input: "^conv1/BatchNorm/beta/Adam_1/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^conv2/weights/Adam/Assign"
  input: "^conv2/weights/Adam_1/Assign"
  input: "^conv2/BatchNorm/beta/Adam/Assign"
  input: "^conv2/BatchNorm/beta/Adam_1/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^ctc_loss_1/w/Adam/Assign"
  input: "^ctc_loss_1/w/Adam_1/Assign"
  input: "^ctc_loss_1/b/Adam/Assign"
  input: "^ctc_loss_1/b/Adam_1/Assign"
  input: "^ctc_loss_1/w1/Adam/Assign"
  input: "^ctc_loss_1/w1/Adam_1/Assign"
  input: "^ctc_loss_1/b1/Adam/Assign"
  input: "^ctc_loss_1/b1/Adam_1/Assign"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/w"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/b"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/w1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/b1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "model/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "model/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "conv1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "conv1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "conv1/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "conv1/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "conv2/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "conv2/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "conv2/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "conv2/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/w/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/w/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/b/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/b/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/w1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/w1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/b1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "ctc_loss_1/b1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ctc_loss_1/b1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "train_input/input_producer/limit_epochs/epochs"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 80
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 80
          }
        }
        string_val: "global_step"
        string_val: "conv1/weights"
        string_val: "conv1/BatchNorm/beta"
        string_val: "conv1/BatchNorm/moving_mean"
        string_val: "conv1/BatchNorm/moving_variance"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "conv2/weights"
        string_val: "conv2/BatchNorm/beta"
        string_val: "conv2/BatchNorm/moving_mean"
        string_val: "conv2/BatchNorm/moving_variance"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias"
        string_val: "ctc_loss_1/w"
        string_val: "ctc_loss_1/b"
        string_val: "ctc_loss_1/w1"
        string_val: "ctc_loss_1/b1"
        string_val: "model/beta1_power"
        string_val: "model/beta2_power"
        string_val: "conv1/weights/Adam"
        string_val: "conv1/weights/Adam_1"
        string_val: "conv1/BatchNorm/beta/Adam"
        string_val: "conv1/BatchNorm/beta/Adam_1"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "conv2/weights/Adam"
        string_val: "conv2/weights/Adam_1"
        string_val: "conv2/BatchNorm/beta/Adam"
        string_val: "conv2/BatchNorm/beta/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam"
        string_val: "lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "ctc_loss_1/w/Adam"
        string_val: "ctc_loss_1/w/Adam_1"
        string_val: "ctc_loss_1/b/Adam"
        string_val: "ctc_loss_1/b/Adam_1"
        string_val: "ctc_loss_1/w1/Adam"
        string_val: "ctc_loss_1/w1/Adam_1"
        string_val: "ctc_loss_1/b1/Adam"
        string_val: "ctc_loss_1/b1/Adam_1"
        string_val: "train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^train_input/input_producer/limit_epochs/epochs/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "learning_rate"
  input: "train_input/input_producer/fraction_of_32_full"
  input: "train_input/shuffle_batch_join/fraction_over_2_of_8_full"
  input: "test_input/input_producer/fraction_of_32_full"
  input: "test_input/shuffle_batch_join/fraction_over_2_of_8_full"
  input: "model/input_raw"
  input: "model/Train/histogram-b-ctc"
  input: "model/Train/histogram-w-ctc"
  input: "model/conv1/weights"
  input: "model/conv1/BatchNorm/beta"
  input: "model/conv1/BatchNorm/moving_mean"
  input: "model/conv1/BatchNorm/moving_variance"
  input: "model/conv2/weights"
  input: "model/conv2/BatchNorm/beta"
  input: "model/conv2/BatchNorm/moving_mean"
  input: "model/conv2/BatchNorm/moving_variance"
  input: "model/label_loss"
  input: "model/reg_loss"
  attr {
    key: "N"
    value {
      i: 18
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^conv1/weights/Assign"
  input: "^conv1/BatchNorm/beta/Assign"
  input: "^conv1/BatchNorm/moving_mean/Assign"
  input: "^conv1/BatchNorm/moving_variance/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^conv2/weights/Assign"
  input: "^conv2/BatchNorm/beta/Assign"
  input: "^conv2/BatchNorm/moving_mean/Assign"
  input: "^conv2/BatchNorm/moving_variance/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Assign"
  input: "^ctc_loss_1/w/Assign"
  input: "^ctc_loss_1/b/Assign"
  input: "^ctc_loss_1/w1/Assign"
  input: "^ctc_loss_1/b1/Assign"
  input: "^model/beta1_power/Assign"
  input: "^model/beta2_power/Assign"
  input: "^conv1/weights/Adam/Assign"
  input: "^conv1/weights/Adam_1/Assign"
  input: "^conv1/BatchNorm/beta/Adam/Assign"
  input: "^conv1/BatchNorm/beta/Adam_1/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_1/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_1/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^conv2/weights/Adam/Assign"
  input: "^conv2/weights/Adam_1/Assign"
  input: "^conv2/BatchNorm/beta/Adam/Assign"
  input: "^conv2/BatchNorm/beta/Adam_1/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_2/horizontal_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/lr/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam/Assign"
  input: "^lstm2d_2/vertical_pass/Horizontal_LSTM/rl/Sequence_LSTM/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^ctc_loss_1/w/Adam/Assign"
  input: "^ctc_loss_1/w/Adam_1/Assign"
  input: "^ctc_loss_1/b/Adam/Assign"
  input: "^ctc_loss_1/b/Adam_1/Assign"
  input: "^ctc_loss_1/w1/Adam/Assign"
  input: "^ctc_loss_1/w1/Adam_1/Assign"
  input: "^ctc_loss_1/b1/Adam/Assign"
  input: "^ctc_loss_1/b1/Adam_1/Assign"
}
versions {
  producer: 26
}
